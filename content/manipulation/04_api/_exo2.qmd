::: {.content-visible when-profile="fr"}

:
```{python}
from IPython.display import HTML
style = '''

    <style>
    .callout {
    border: 2px solid #d1d5db;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    background-color: #ffffff;
    padding: 15px;
}
.callout-header-note {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #47648a;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-tip {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #41745d;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-exercise {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #c46aad;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-warning {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #967b30;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-important {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #86252b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-caution {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #a7663b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}


.callout-body {
    margin: 10px 0;
}
    </style>
    
'''
content_html = '''

    <div class="callout callout-exercise">
        <div class="callout-header-exercise">
            <i class="fa-solid fa-pen-fancy"></i> Exercice 2 : Quelles sont les auto-√©coles les plus proches de chez moi ?
        </div>
        <div class="callout-body">
            <p>On va supposer que vous cherchez, dans un rayon donn√© autour d\'un centre ville,
les auto-√©coles disponibles.</p>
<details>
<summary>
Fonction n√©cessaire pour cet exercice
</summary>
Cet exercice n√©cessite une fonction pour cr√©er un cercle
autour d\'un point
(source [ici](https://gis.stackexchange.com/questions/289044/creating-buffer-circle-x-kilometers-from-point-using-python/289923)).
La voici :

~~~python
from functools import partial
import pyproj
from shapely.ops import transform
from shapely.geometry import Point

proj_wgs84 = pyproj.Proj(\'+proj=longlat +datum=WGS84\')


def geodesic_point_buffer(lat, lon, km):
    # Azimuthal equidistant projection
    aeqd_proj = \'+proj=aeqd +lat_0={lat} +lon_0={lon} +x_0=0 +y_0=0\'
    project = partial(
        pyproj.transform,
        pyproj.Proj(aeqd_proj.format(lat=lat, lon=lon)),
        proj_wgs84)
    buf = Point(0, 0).buffer(km * 1000)  # distance in metres
    return transform(project, buf).exterior.coords[:]
~~~
</details>

<ol>
<li>Pour commencer, utiliser l\'<a href="https://geo.api.gouv.fr/decoupage-administratif">API Geo</a>
pour la ville de Palaiseau.</li>
<li>Appliquer la fonction <code>geodesic_point_buffer</code> au centre ville de Palaiseau</li>
<li>Ne conserver que les auto-√©coles dans ce cercle et les ordonner </li>
</ol>
<p><strong>Si vous avez la r√©ponse √† la question 3, n\'h√©sitez pas √† la soumettre sur <code>Github</code> afin que je compl√®te la correction</strong> üòâ !</p>
        </div>
    </div>
    
'''
HTML(f'<script src="https://kit.fontawesome.com/3c27c932d3.js" crossorigin="anonymous"></script>\n{style}\n{content_html}')

```
:

:::


::: {.content-visible when-profile="en"}

:
```{python}
from IPython.display import HTML
style = '''

    <style>
    .callout {
    border: 2px solid #d1d5db;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    background-color: #ffffff;
    padding: 15px;
}
.callout-header-note {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #47648a;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-tip {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #41745d;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-exercise {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #c46aad;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-warning {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #967b30;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-important {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #86252b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-caution {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #a7663b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}


.callout-body {
    margin: 10px 0;
}
    </style>
    
'''
content_html = '''

    <div class="callout callout-exercise">
        <div class="callout-header-exercise">
            <i class="fa-solid fa-pen-fancy"></i> Exercise 2: Which driving schools are closest to my home?
        </div>
        <div class="callout-body">
            <p>Let\'s assume you are looking, within a given radius around a city center, for available driving schools.</p>
<details>
<summary>
Function needed for this exercise
</summary>
This exercise requires a function to create a circle around a point (source [here](https://gis.stackexchange.com/questions/289044/creating-buffer-circle-x-kilometers-from-point-using-python/289923)). Here it is:

~~~python
from functools import partial
import pyproj
from shapely.ops import transform
from shapely.geometry import Point

proj_wgs84 = pyproj.Proj(\'+proj=longlat +datum=WGS84\')

def geodesic_point_buffer(lat, lon, km):
    # Azimuthal equidistant projection
    aeqd_proj = \'+proj=aeqd +lat_0={lat} +lon_0={lon} +x_0=0 +y_0=0\'
    project = partial(
        pyproj.transform,
        pyproj.Proj(aeqd_proj.format(lat=lat, lon=lon)),
        proj_wgs84)
    buf = Point(0, 0).buffer(km * 1000)  # distance in metres
    return transform(project, buf).exterior.coords[:]
~~~
</details>

<ol>
<li>To begin, use the <a href="https://geo.api.gouv.fr/decoupage-administratif">Geo API</a> for the city of Palaiseau.</li>
<li>Apply the <code>geodesic_point_buffer</code> function to the center of Palaiseau.</li>
<li>Keep only the driving schools within this circle and order them.</li>
</ol>
<p><strong>If you have the answer to question 3, feel free to submit it on <code>GitHub</code> so I can complete the correction</strong> üòâ !</p>
        </div>
    </div>
    
'''
HTML(f'<script src="https://kit.fontawesome.com/3c27c932d3.js" crossorigin="anonymous"></script>\n{style}\n{content_html}')

```
:

:::
