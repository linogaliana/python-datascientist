::: {.content-visible when-profile="fr"}

:
```{python}
from IPython.display import HTML
style = '''

    <style>
    .callout {
    border: 2px solid #d1d5db;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    background-color: #ffffff;
    padding: 15px;
}
.callout-header-note {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #47648a;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-tip {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #41745d;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-exercise {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #c46aad;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-warning {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #967b30;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-important {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #86252b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-caution {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #a7663b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}


.callout-body {
    margin: 10px 0;
}
    </style>
    
'''
content_html = '''

    <div class="callout callout-exercise">
        <div class="callout-header-exercise">
            <i class="fa-solid fa-pen-fancy"></i> Exercice 5: Un beau tableau de statistiques descriptives (exercice libre)
        </div>
        <div class="callout-body">
            <p>En prenant comme base ce tableau</p>
<p>~~~python
GT(emissions_table, groupname_col="grp", rowname_col="dep")
~~~</p>
<p>construire un tableau dans le style de celui ci-dessous</p>
        </div>
    </div>
    
'''
HTML(f'<script src="https://kit.fontawesome.com/3c27c932d3.js" crossorigin="anonymous"></script>\n{style}\n{content_html}')

```
:

```{python}
#| echo: true
# Start from here
from great_tables import GT
GT(emissions_table, groupname_col="grp", rowname_col="dep")
```

Le tableau à obtenir:

```{python}
from great_tables import GT, md
import polars.selectors as cs

(
    GT(emissions_table, groupname_col="grp", rowname_col="dep")
    .tab_header(title=md("**Empreinte carbone**"), subtitle = md("_Premières statistiques descriptives à affiner_"))
    .fmt_number("empreinte", decimals = 2, scale_by=0.1)
    .fmt_number("population", compact=True)
    .fmt_number("revenu", compact=True, decimals = 1)
    .fmt_percent(cs.starts_with("raw_perc"), decimals = 1)
    .cols_move(
        columns=cs.ends_with("_empreinte"),
        after="empreinte"
    )
    .cols_move(
        columns=cs.ends_with("_population"),
        after="population"
    )
    .cols_move(
        columns=cs.ends_with("_revenu"),
        after="revenu"
    )
    .cols_label(
        dep=md("**Département**"),
        empreinte = md("**Empreinte carbone**"),
        revenu = md("**Revenu**"),
        population = md("**Population**"),
    )
    .cols_label(
        **{
            val: md("_(%)_*") for val in emissions_table.select(cs.contains("raw_perc")).columns
        }
    )    
    .cols_label(
        **{
            val: "" for val in emissions_table.select(cs.contains("bar")).columns
        }
    )    
    .tab_spanner(label=md("**Empreinte**"), columns=cs.ends_with("empreinte"))
    .tab_spanner(label=md("**Revenu médian**"), columns=cs.ends_with("revenu"))
    .tab_spanner(label=md("**Population**"), columns=cs.ends_with("population"))
    .tab_source_note(
        source_note=md("_*__Note__: Le revenu médian présenté ici est une approximation du revenu médian du département_.")
    )
    .tab_source_note(
        source_note=md("*__Lecture__: Les colonnes __(%)__ présentées ci-dessus sont rapportées à la valeur maximale de la variable*")
    )
    .tab_source_note(
        source_note=md("*__Source__: Calculs à partir des données de l'Ademe*")
    )
    .tab_options(
        heading_background_color="#0c540c"
    )

)
```

:::

::: {.content-visible when-profile="en"}

:
```{python}
from IPython.display import HTML
style = '''

    <style>
    .callout {
    border: 2px solid #d1d5db;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    background-color: #ffffff;
    padding: 15px;
}
.callout-header-note {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #47648a;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-tip {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #41745d;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-exercise {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #c46aad;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-warning {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #967b30;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-important {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #86252b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}

.callout-header-caution {
    font-weight: bold;
    margin-bottom: 10px;
    color: #ffffff;
    background-color: #a7663b;
    padding: 10px;
    border-radius: 6px 6px 0 0;
}


.callout-body {
    margin: 10px 0;
}
    </style>
    
'''
content_html = '''

    <div class="callout callout-exercise">
        <div class="callout-header-exercise">
            <i class="fa-solid fa-pen-fancy"></i> Exercise 5: A Beautiful Descriptive Statistics Table (Open Exercise)
        </div>
        <div class="callout-body">
            <p>Using this base table</p>
<p>~~~python
GT(emissions_table, groupname_col="grp", rowname_col="dep")
~~~</p>
<p>construct a table in the style of the one below.</p>
        </div>
    </div>
    
'''
HTML(f'<script src="https://kit.fontawesome.com/3c27c932d3.js" crossorigin="anonymous"></script>\n{style}\n{content_html}')

```
:


```{python}
#| echo: true
# Start from here
GT(emissions_table, groupname_col="grp", rowname_col="dep")
```

The table you should have :

```{python}
from great_tables import GT, md
import polars.selectors as cs

(
    GT(emissions_table, groupname_col="grp", rowname_col="dep")
    .tab_header(title=md("**Carbon Footprint**"), subtitle = md("_Initial descriptive statistics to refine_"))
    .fmt_number("empreinte", decimals = 2, scale_by=0.1)
    .fmt_number("population", compact=True)
    .fmt_number("revenu", compact=True, decimals = 1)
    .fmt_percent(cs.starts_with("raw_perc"), decimals = 1)
    .cols_move(
        columns=cs.ends_with("_empreinte"),
        after="empreinte"
    )
    .cols_move(
        columns=cs.ends_with("_population"),
        after="population"
    )
    .cols_move(
        columns=cs.ends_with("_revenu"),
        after="revenu"
    )
    .cols_label(
        dep=md("**Department**"),
        empreinte = md("**Carbon Footprint**"),
        revenu = md("**Income**"),
        population = md("**Population**"),
    )
    .cols_label(
        **{
            val: md("_(%)_*") for val in emissions_table.select(cs.contains("raw_perc")).columns
        }
    )    
    .cols_label(
        **{
            val: "" for val in emissions_table.select(cs.contains("bar")).columns
        }
    )    
    .tab_spanner(label=md("**Footprint**"), columns=cs.ends_with("empreinte"))
    .tab_spanner(label=md("**Median Income**"), columns=cs.ends_with("revenu"))
    .tab_spanner(label=md("**Population**"), columns=cs.ends_with("population"))
    .tab_source_note(
        source_note=md("_*__Note__: The median income presented here is an approximation of the department's median income_.")
    )
    .tab_source_note(
        source_note=md("*__Reading__: The __(%)__ columns presented above are scaled to the maximum value of the variable*")
    )
    .tab_source_note(
        source_note=md("*__Source__: Calculations based on Ademe data*")
    )
    .tab_options(
        heading_background_color="#0c540c"
    )

)
```

:::