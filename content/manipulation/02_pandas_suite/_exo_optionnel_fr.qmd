```{python}
#| echo: true
#| output: false
import duckdb
coiffeurs = duckdb.sql("""
  SELECT
    siren, siret, dateDebut, enseigne1Etablissement, activitePrincipaleEtablissement, denominationUsuelleEtablissement
  FROM
    read_parquet('https://minio.lab.sspcloud.fr/lgaliana/data/sirene2024.parquet')
  WHERE
    activitePrincipaleEtablissement == '96.02A'
    AND
    denominationUsuelleEtablissement IS NOT NULL
""")
coiffeurs = coiffeurs.df() #<1>
```
1. Convert the DuckDB dataframe to a Pandas DataFrame.

```{python}
#| echo: true
coiffeurs.head(3)
```


::: {.exercise}
## Exercice optionnel : les coiffeurs blagueurs

Dans cet exercice, nous allons considérer exclusivement la variable `denominationUsuelleEtablissement`. 

1. Dans cette base, `[ND]` est un code pour valeur manquante. Comme `Python` n'a pas de raison de le savoir _a priori_ et donc d'avoir interprété ces valeurs comme étant manquantes, utiliser la méthode `replace` pour remplacer `[ND]` par un champ textuel vide. Recoder également les valeurs manquantes sous forme de champ textuel vide afin d'éviter des erreurs ultérieures liées à l'impossibilité d'appliquer certaines méthodes textuelles aux valeurs manquantes. 
2. Rechercher toutes les observations où le terme `tif` apparaît en faisant attention à la capitalisation de la variable. Regarder quelques observations
3. A partir de [cet exemple](https://stackoverflow.com/a/23996414/9197726), normaliser les noms des salons en retirant les caractères spéciaux et compter les jeux de mots les plus fréquents

:::