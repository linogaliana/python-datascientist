```{python}
#| echo: true
#| label: load-carti_download
from cartiflette import carti_download
```

::: {.exercise}
## Exercice 1: découverte des objets géographiques

En premier lieu, on récupère des données géographiques grâce
au _package_ `cartiflette` et à sa fonction `carti_download`.

1. Utiliser
le code ci-dessous pour
télécharger les données communales (produit `Admin Express` de l'IGN)
des départements de la petite couronne (75, 92, 93 et 94)
de manière simplifiée grâce au _package_
`cartiflette`:

```{python}
#| echo: true
#| output: false
from cartiflette import carti_download
communes_borders = carti_download(
    crs = 4326,
    values = ["75", "92", "93", "94"],
    borders="COMMUNE",
    vectorfile_format="geojson",
    filter_by="DEPARTEMENT",
    source="EXPRESS-COG-CARTO-TERRITOIRE",
    year=2022)
```

2. Regarder les premières lignes des données. Identifier la différence avec
un _dataframe_ standard. 

3. Afficher le système de projection (attribut `crs`) de `communes_borders`. Ce dernier contrôle la
transformation de l'espace tridimensionnel terrestre en une surface plane.
Utiliser `to_crs` pour transformer les données en Lambert 93, le 
système officiel (code EPSG 2154). 

4. Afficher les communes des Hauts de Seine (département 92) et utiliser la méthode
`plot`

5. Ne conserver que Paris et réprésenter les frontières sur une carte : quel est le problème pour
une analyse de Paris intramuros?

On remarque rapidement le problème. 
On ne dispose ainsi pas des limites des arrondissements parisiens, ce
qui appauvrit grandement la carte de Paris. 

6. Cette fois, utiliser l'argument `borders="COMMUNE_ARRONDISSEMENT"` pour obtenir
un fonds de carte consolidé des communes avec les arrondissements dans les grandes villes. 
Convertir en Lambert 93. 

:::
