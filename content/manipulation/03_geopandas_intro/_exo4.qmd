::: {.content-visible when-profile="fr"}

:::: {.exercise}
## Exercice 4: Associer les stations aux communes et arrondissements auxquels elles appartiennent


1. Faire une jointure spatiale pour enrichir les données de stations en y ajoutant des informations de `petite_couronne`. Appeler cet objet `stations_info`.
2. Compter le nombre de stations et la taille médiane des stations par arrondissements
2. Créer les objets `stations_19e` et `arrondissement_19e` pour stocker, respectivement, 
les stations appartenant au 19e et les limites de l'arrondissement.
2. Compter le nombre de stations velib et le nombre de places velib par arrondissement ou commune. Représenter sur une carte chacune des informations
2. Représenter la carte des stations du 19e arrondissement avec le code suivant :

```python
base = petite_couronne.loc[petite_couronne['INSEE_DEP']=="75"].boundary.plot(edgecolor = "k", linewidth=0.5)
arrondissement_19e.boundary.plot(ax = base, edgecolor = "red", linewidth=0.9)
stations_19.plot(ax = base, color = "red", alpha = 0.4)
base.set_axis_off()
base.set_title("Les stations Vélib du 19e arrondissement")
base
```

En reprenant les exemples précédents, ne représenter que le 19e et ajouter un fond de carte _openstreetmap_ pour mieux localiser les stations. 

4. Représenter les mêmes informations mais en densité (diviser par la surface de l'arrondissement ou commune en km2)

::::

:::

::: {.content-visible when-profile="en"}

:::: {.exercise}
## Exercise 4: Associate Stations with Their Corresponding Communes and Arrondissements

1. Perform a spatial join to enrich the station data by adding information from `petite_couronne`. Call this object `stations_info`.
2. Count the number of stations and the median size of the stations by arrondissement.
3. Create the objects `stations_19e` and `arrondissement_19e` to store, respectively, the stations belonging to the 19th arrondissement and the boundaries of the arrondissement.
4. Count the number of velib stations and the number of velib spots by arrondissement or commune. Represent each of these pieces of information on a map.
5. Represent the map of stations in the 19th arrondissement with the following code:

```python
base = petite_couronne.loc[petite_couronne['INSEE_DEP']=="75"].boundary.plot(edgecolor = "k", linewidth=0.5)
arrondissement_19e.boundary.plot(ax = base, edgecolor = "red", linewidth=0.9)
stations_19.plot(ax = base, color = "red", alpha = 0.4)
base.set_axis_off()
base.set_title("Les stations Vélib du 19e arrondissement")
base
```

Following the previous examples, only represent the 19th arrondissement and add an openstreetmap background to better locate the stations.

6. Represent the same information but in density (divide by the surface area of the arrondissement or commune in km²).

::::

:::

