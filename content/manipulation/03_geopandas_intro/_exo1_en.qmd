```{python}
#| echo: true
#| label: load-carti_download
from cartiflette import carti_download
```

::: {.exercise}
## Exercise 1: Discovering spatial objects

First, we will retrieve geographic data using the `cartiflette` package and its `carti_download` function.

1. Use the code below to download municipal data (IGN's `Admin Express` product) for the departments of the inner suburbs (75, 92, 93, and 94) in a simplified manner using the `cartiflette` package:

```python
#| echo: true
#| output: false
from cartiflette import carti_download
communes_borders = carti_download(
    crs = 4326,
    values = ["75", "92", "93", "94"],
    borders="COMMUNE",
    vectorfile_format="geojson",
    filter_by="DEPARTEMENT",
    source="EXPRESS-COG-CARTO-TERRITOIRE",
    year=2022)
```

2. Look at the first few rows of the data. Identify the difference from a standard dataframe.

3. Display the projection system (attribute `crs`) of `communes_borders`. This controls the transformation of the three-dimensional terrestrial space into a flat surface. Use `to_crs` to transform the data into Lambert 93, the official system (EPSG code 2154).

4. Display the municipalities of Hauts de Seine (department 92) and use the `plot` method.

5. Keep only Paris and plot the borders on a map: what is the problem for an analysis of intramural Paris?

You will quickly notice the problem. We do not have the boundaries of Parisian districts, which greatly impoverishes the map of Paris.

6. This time, use the argument `borders="COMMUNE_ARRONDISSEMENT"` to obtain a consolidated map with the municipalities and districts in large cities. Convert to Lambert 93.

:::
