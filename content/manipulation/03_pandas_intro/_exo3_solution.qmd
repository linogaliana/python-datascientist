```{python}
#| output: false
#| label: exo3-q1
# Question 1
stations.crs
stations = stations.to_crs(petite_couronne.crs) 
```


```{python}
#| output: false
#| label: exo3-q2
# Question 2
principales_stations = stations.sort_values("capacity", ascending = False).head(50)
```

```{python}
#| output: asis
#| echo: false
if lang == "fr":
    print("La couche de base obtenue à l'issue de la question 3.")
else:
    print("The base layer obtained after question 3.")
```

```{python}
#| label: exo2-q3
# Question 3
base = petite_couronne.boundary.plot(edgecolor = "black", linewidth = 0.5)
base
```

```{python}
#| output: asis
#| echo: false
if lang == "fr":
    print("Puis en y ajoutant les limites départementales (question 4).")
else:
    print("Then by adding the departmental boundaries (question 4).")
```



```{python}
#| label: exo2-q4
# Question 4
base = petite_couronne.boundary.plot(edgecolor = "black", linewidth = 0.5)
petite_couronne_departements.boundary.plot(ax = base, edgecolor = "blue", linewidth = 0.7)
base
```

```{python}
#| output: asis
#| echo: false
if lang == "fr":
    print("Puis les stations (question 5).")
else:
    print("Then the stations (question 5).")
```


```{python}
#| label: exo2-q5
# Question 5
base = petite_couronne.boundary.plot(edgecolor = "black", linewidth = 0.5)
petite_couronne_departements.boundary.plot(ax = base, edgecolor = "blue", linewidth = 0.7)
principales_stations.plot(ax= base, markersize = "capacity", color = "red", alpha = 0.4)
base
```

```{python}
#| output: asis
#| echo: false
if lang == "fr":
    print("Ensuite, si on retire les axes (question 6), on obtient:")
else:
    print("Next, if we remove the axes (question 6), we get:")
```


```{python}
# Question 6
base = petite_couronne.boundary.plot(edgecolor = "black", linewidth = 0.5)
petite_couronne_departements.boundary.plot(ax = base, edgecolor = "blue", linewidth = 0.7)
principales_stations.plot(ax= base, markersize = "capacity", color = "red", alpha = 0.4)
base.set_axis_off()
base.set_title("Les 50 principales stations de Vélib")
base
```


```{python}
# Question 7
import contextily as ctx
base = (
  petite_couronne.
  to_crs(3857)
  .boundary.plot(edgecolor = "black", linewidth = 0.5)
)
(
  petite_couronne_departements
  .to_crs(3857)
  .boundary.plot(ax = base, edgecolor = "blue", linewidth = 0.7)
)
(
  principales_stations
  .to_crs(3857)
  .plot(ax= base, markersize = "capacity", color = "red", alpha = 0.4)
)
```

