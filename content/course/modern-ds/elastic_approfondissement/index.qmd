---
title: "Approfondissement ElasticSearch pour des recherches de proximité géographique"
date: 2020-09-03T13:00:00Z
draft: false
weight: 20
tags:
  - elastic
  - levenshtein
  - sirene
categories:
  - Tutoriel
slug: elastic-geo
type: book
summary: |
  ElasticSearch est un moteur de recherche extrêmement rapide et flexible. 
  Cette technologie s'est imposée dans le domaine du traitement des 
  données textuelles. L'API Python permet d'intégrer cette 
  technologie dans des processus Python afin de les accélérer. Ce chapitre
  présente cette intégration d'Elastic avec l'exemple de la recherche
  dans les données alimentaires de l'OpenFood Facts Database 
---


Pour essayer les exemples présents dans ce tutoriel : 

```{python}
#| echo: false
#| output: 'asis'
#| include: true
#| eval: true

import sys
sys.path.insert(1, '../../../../') #insert the utils module
from utils import print_badges

#print_badges(__file__)
print_badges("content/course/modern-ds/elastic_approfondissement.qmd")
```

Ce chapitre est issu du travail produit
dans le cadre d'un hackathon de l'Insee avec
[Raphaële Adjerad](https://github.com/raphaeleadjerad) 
et présente quelques éléments qui peuvent être utiles
pour l'enrichissement de données d'entreprises
à partir d'un répertoire officiel. 

:warning: Il nécessite une version particulière du package `elasticsearch` pour tenir compte de l'héritage de la version 7 du moteur Elastic. Pour cela, faire

~~~python
pip install elasticsearch==8.2.0
~~~

# Introduction

## Réplication de ce chapitre

Comme le précédent, ce chapitre est plus exigeant en termes d'infrastructures que les précédents.
Il nécessite un serveur Elastic. Les utilisateurs du
[SSP Cloud](datalab.sspcloud.fr/) pourront répliquer les exemples de ce cours
car cette technologie est disponible (que ce soit pour indexer une base ou
pour requêter une base existante).

La première partie de ce tutoriel, qui consiste à créer une base Sirene géolocalisée
à partir des données _open-data_ ne nécessite pas d'architecture particulière et
peut ainsi être exécutée en utilisant les packages suivants: 

```{python}
import time
import numpy as np
import pandas as pd
```


