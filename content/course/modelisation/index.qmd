---
title: "Partie 3: modéliser"
date: 2020-10-14T13:00:00Z
draft: false
slug: "modelisation"
categories:
  - Introduction
  - Modélisation
description: |
  La facilité à modéliser des processus très diverses a grandement 
  participé au succès de `Python`. La librairie `scikit` offre une
  grande variété de modèles et permet ainsi d'avoir un code
  fonctionnel en très peu de temps.
bibliography: ../../../reference.bib
image: hal9000.png
---

Les _data scientists_ sont souvent associés à la mise en oeuvre
de modèles complexes d'intelligence artificielle. 
Le succès médiatique de ce type d'outils, notamment `ChatGPT`, 
n'y est pas pour rien. Cependant, la modélisation n'est souvent
qu'une 
phase du travail du _data scientist_, un peu comme la visualisation. 
D'ailleurs, dans certaines organisations où la division des tâches 
est plus poussée, les _data engineers_ sont au moins aussi
impliqués dans la phase de modélisation que les _data scientists_. 

C'est souvent un péché de jeunesse de penser qu'on peut résumer
le travail du _data scientist_ exclusivement à la phase de modélisation.
Cette dernière dépend très fortement de la qualité du travail de 
nettoyage et structuration des données mis en oeuvre en amont. La
mise en oeuvre de modèles complexes, qui s'accomodent de données
peu structurées, est gourmande en ressource et coûteuse. Ce ne sont
donc qu'un nombre limité d'acteurs qui peuvent entraîner, _ex nihilo_, 
des grands modèles de langage[^1], capables de dépenser au moins 300 000 dollars
dans l'entraînement d'un modèle, avant même toute phase d'inférence [@izsak2021train].
Ces besoins computationnels pour entraîner de grands modèles de langage sont
d'ailleurs assez gourmands en énergie, ce qui peut amener à
des empreintes carbones non négligeables [@strubell2019energy; @arcep2019].  

Heureusement, il est possible de mettre en oeuvre des modélisations plus
légères (celles que nous présenterons dans les prochains chapitres)
ou de réutiliser des modèles pré-entraînés pour les spécialiser
sur un nouveau jeu de données (principe du [_fine tuning_](https://huggingface.co/docs/transformers/training)[^2]).
En fait, pour être plus pertinent que des approches plus parcimonieuse,
les techniques de _deep learning_, notamment
les réseaux de neurone, nécessitent soit des volumes de données très
importants (des millions voire dizaine de millions d'observations) soit
des données à la structure complexe comme le langage naturel ou les images. 
Dans de nombreux cas, des modèles plus simples comme les techniques d'apprentissage
automatique (_machine learning_) suffisent largement. 

[^1]: Nous reviendrons de manière épisodique 
sur ce principe des grands modèles de langage
qui sont devenus, en quelques années,
centraux dans l'écosystème de la _data science_ mais sont également 
amenés à devenir des outils grands publics, à la manière de `ChatGPT`. 

[^2]: Historiquement, cette approche nécessitait de disposer de données labellisées donc d'être
dans un cadre d'apprentissage supervisé. 

    Cependant, avec l'utilisation de plus en plus 
fréquente de données non structurées, sans _labels_, a émergé une approche intéressante
qui ne nécessite plus forcément de labelliser des volumes importants de données en amont :
le [_reinforcement learning with human feedback_](https://huggingface.co/blog/rlhf).
  
    [Cet article d'Andrew Ng](https://www.deeplearning.ai/the-batch/building-ai-systems-no-longer-requires-much-data/?ref=dl-staging-website.ghost.io) revient sur la manière dont cette approche
change la donne dans l'entraînement ou le ré-entraînement de modèles.  

## La modélisation, une approche au coeur de la statistique {.unnnumbered}

Un modèle statistique
est une représentation simplifiée et structurée d'un phénomène réel,
construite à partir d'observations regroupées dans un ensemble partiel de données. 

Un modèle vise à capturer les relations et les schémas sous-jacents au sein de ces données, permettant ainsi de formuler des hypothèses, d'effectuer des prédictions et d'extrapoler des conclusions au-delà 
de l'ensemble de données mesurées.
Les modèles statistiques fournissent ainsi un cadre analytique pour explorer, comprendre et interpréter les informations contenues dans les données. 
Dans le domaine de la recherche économique, ils peuvent servir à 
associer certains paramètres structurants des modèles de comportement
économique à des valeurs quantitatives. 
Les modèles statistiques, comme les modèles économiques
présentent néanmoins toujours une part d'irréalisme [@friedman1953methodology; @salmon2010probleme]
et accepter de manière trop litérale les implications d'un modèle, même s'il
a de bonnes performances prédictives, peut être dangereux et relever d'un biais
scientiste. On sélectionne plutôt le moins mauvais modèle
que le vrai processus générateur des données. 

Représenter la réalité sous la forme d'un modèle est un principe à la
base de la statistique comme discipline scientifique et ayant des
applications dans de nombreux champs disciplinaires: économie,
sociologie, géographique, biologie, physique, etc. 
Selon les disciplines, le nom donné peut varier mais on retrouve
régulièrement la même approche scientifique: le modélisateur
construit des relations entre plusieurs variables théoriques
ayant des contreparties empiriques afin d'expliquer tel ou tel
processus. 

Dans l'enseignement de l'ENSAE ce type d'approche empirique se retrouve
principalement dans deux types d'approches: le *machine learning* et
l'économétrie. La différence est certes
sémantique - la régression linéaire peut être considérée comme une 
technique de _machine learning_ ou d'économétrie - mais elle est
également conceptuelle: 

- Dans le domaine du _machine learning_,
la structure imposée par le modélisateur est minimale et ce sont plutôt
les algorithmes qui, sur des critères de performance statistique, vont
amener à choisir une loi mathématique qui correspond au mieux aux données ;
- En économétrie,
les hypothèses de structure des lois sont plus fortes (même dans un cadre semi ou non-paramétrique) et sont plus souvent imposées
par le modélisateur.

Dans cette partie du cours, nous allons principalement
parler de _machine learning_ car il s'agit d'une perspective
plus opérationnel que l'économétrie qui est plus directement associée
à des concepts statistiques complexes comme la théorie asymptotique. 

L'adoption du _machine learning_ dans la littérature économique a été longue
car la structuration des données est souvent le
pendant empirique d'hypothèses théoriques sur le comportement des acteurs ou des marchés [@athey2019machine; @charpentier2018econometrics].
Pour caricaturer, l’économétrie s’attacherait à comprendre la causalité de certaines variables sur une autre.
Cela implique que ce qui intéresse l'économètre
est principalement de l'estimation des paramètres (et l'incertitude
sur l'estimation de ceux-ci) qui permettent de quantifier l'effet d'une
variation d'une variable sur une autre. 
Toujours pour caricaturer, 
le _machine learning_ se focaliserait
sur un simple objectif prédictif en exploitant les relations de corrélations entre les variables.
Dans cette perspective, l'important n'est pas la causalité mais le fait qu'une variation
de $x$% d'une variable permette d'anticiper un changement de $\beta x$ de la variable
d'intérêt ; peu importe la raison.
@MullainathanJEP ont ainsi, pour simplifier, proposé la différence fondamentale qui 
suit: l'économétrie se préoccupe de $\widehat{\beta}$ là où le _machine learning_
se focalise sur $\widehat{y}$. Les deux sont bien-sûr reliés dans un cadre
linéaire mais cette différence d'approche a des implications importantes
sur la structure des modèles étudiés, notamment leur parcimonie[^3]. 

[^3]: Comme nous l'avons dit, cette différenciation est un peu 
caricaturale, notamment maintenant que les économistes sont
plus familiarisés aux concepts d'évaluation de performance
prédictive sur des sous-ensembles d'apprentissage et de test (mais
l'évolution est lente). 

    La recherche en _machine learning_ est quant à elle très dynamique 
sur la question de l'explicabilité et de l'interprétabilité
des modèles de _machine learning_, notamment autour du concept
de [valeurs de Shapley](https://shap.readthedocs.io/en/latest/index.html).



### Apprentissage supervisé ou non supervisé ?

On distingue généralement deux types de méthodes, selon qu'on dispose d'information, dans l'échantillon
d'apprentissage, sur les valeurs cibles *y* (on utilisera parfois le terme *label*) :

* **apprentissage supervisé** : la valeur cible est connue et peut-être utilisée pour évaluer la qualité d'un modèle 

*Ex : modèles de prédiction du type régression / classification : SVM, kNN, arbres de classification...*

* **apprentissage non supervisé** : la valeur cible est inconnue et ce sont des critères statistiques qui vont amener
à sélectionner la structure de données la plus plausible. 

*Ex : modèles de réduction de dimension ou de clustering (PCA, kmeans...)*

## Panorama d'un éco-système vaste

Grâce aux principaux packages de Machine Learning (`scikit`), Deep Learning (`keras`, `pytorch`, `TensorFlow`...) et économétrie  (`statsmodels`), la modélisation est extrêmement simplifiée. Cela ne doit pas faire oublier l'importance de la structuration et de la préparation des données. Souvent, l'étape la plus cruciale est le choix du modèle le plus adapté à la structure des données.

L'aide-mémoire suivante, issue de l'aide de `scikit-learn`, concernant les modèles de Machine Learning peut déjà donner de premiers enseignements sur les différentes familles de modèles:

![](https://scikit-learn.org/stable/_static/ml_map.png)


## Données

La plupart des exemples de cette partie s'appuient sur les résultats des
élections US 2020 au niveau comtés. Plusieurs bases sont utilisées pour 
cela:

* Les données électorales sont une reconstruction à partir des données du MIT election lab
proposées sur `Github` par [@tonmcg](https://github.com/tonmcg/US_County_Level_Election_Results_08-20)
ou directement disponibles sur le site du [MIT Election Lab](https://electionlab.mit.edu/data)
* Les données socioéconomiques (population, données de revenu et de pauvreté, 
taux de chômage, variables d'éducation) proviennent de l'USDA ([source](https://www.ers.usda.gov/data-products/county-level-data-sets/))
* Le *shapefile* vient des données du *Census Bureau*. Le fichier peut
être téléchargé directement depuis cet url:
<https://www2.census.gov/geo/tiger/GENZ2019/shp/cb_2019_us_county_20m.zip>

Le code pour construire une base unique à partir de ces sources diverses
est disponible ci-dessous : 

```{python class.output = "python"}
#| echo: false

with open('get_data.py', 'r') as f:
  for line in f:
    if not line.startswith("## ----"):
      print(line, end='')
```

## Contenu de la partie

Autres champs:
* maximum vraisemblance
* stats bayésiennes
* semi et non paramétrique: méthodes noyaux, GAM

## Références

::: {#refs}
:::