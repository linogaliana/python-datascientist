---
title: Introduction
title-en: Introduction
description: "Cette introduction présente l'objectif du cours,les partis-pris
  pédagogiques, le fil conducteur de cet enseignement ainsi que les modalités
  pratiques de celui-ci."
description-en: "This introduction presents the course objective, pedagogical approach,
  the main theme of this of the course, as well as the practical practical details."
image: https://ensae-reproductibilite.github.io/website/egg.jpg
bibliography: ../../reference.bib
---



{{< include "/content/getting-started/intro/_intro.qmd" >}}

{{< include "/content/getting-started/intro/_pourquoi_python.qmd" >}}

{{< include "/content/getting-started/intro/_pourquoi_python_data.qmd" >}}

{{< include "/content/getting-started/intro/_pourquoi_python_ia.qmd" >}}


::: {.content-visible when-profile="fr"}
# Objectifs du cours

## Initier à la démarche de la _data science_

Ce cours s’adresse aux praticiens de la _data science_,
discipline entendue ici au sens large comme la __combinaison de techniques issues des mathématiques, de la statistique et de l’informatique pour produire de la connaissance utile à partir de données__.
Comme la _data science_ n’est pas uniquement une discipline scientique mais vise également à fournir un ensemble d’outils pour répondre à des objectifs opérationnels, l'apprentissage du principal outil nécessaire à l'acquisition de connaissances en _data science_, à savoir le langage `Python` est également
l'occasion d'évoquer la démarche scientifique rigoureuse à adopter face à des données. Ce cours a pour objectif de présenter la démarche face à un jeu de données, les problèmes rencontrés, les solutions pour les surmonter et les implications que ces dernières peuvent avoir. Il ne s'agit donc pas que d'un cours sur un outil technique, désincarné de problématiques scientifiques.
:::

::: {.content-visible when-profile="en"}
# Course Objectives

## Introducing the Approach to _Data Science_

This course is aimed at practitioners of _data science_,
understood here in a broad sense as the __combination of techniques from mathematics, statistics, and computer science to produce useful knowledge from data__.
As _data science_ is not only a scientific discipline but also aims to provide a set of tools to meet operational objectives, learning the main tool necessary for acquiring knowledge in _data science_, namely the `Python` language, is also an opportunity to discuss the rigorous scientific approach to be adopted when working with data. This course aims to present the approach to handling a dataset, the problems encountered, the solutions to overcome them, and the implications of these solutions. It is therefore not just a course on a technical tool, detached from scientific issues.
:::


::: {.content-visible when-profile="fr"}
:::: {.tip}
## Faut-il avoir un _background_ en mathématiques pour ce cours ?

Ce cours présuppose qu'on désire faire un usage de `Python` intense
en données dans un cadre statistique rigoureux. Il ne
revient que de manière secondaire
sur les fondements statistiques ou algorithmiques
derrière certaines des techniques évoquées, souvent l'objet d'enseignements dédiés, notamment
à l'ENSAE.

Ne pas connaître ces notions n'empêche ainsi pas de comprendre
le contenu de ce site *web* car les concepts plus avancés sont généralement présentés à part,
dans des encadrés dédiés.
La facilité d'usage de `Python`
évite de devoir programmer soi-même un modèle, ce qui rend
possible l'application
de modèles dont on n'est pas expert. La connaissance des modèles sera
plutôt nécessaire dans l'interprétation des résultats.

Pour autant, même s'il est relativement facile d'utiliser des
modèles complexes
avec `Python`, il est fort utile d'avoir du recul sur ceux-ci avant
de se lancer dans une démarche de modélisation. Il s'agit de l'une des
raisons pour lesquelles la modélisation arrive si tardivement dans ce cours: en
plus de faire appel à des concepts statistiques avancés, il est nécessaire,
pour produire une modélisation pertinente, d'avoir appréhendé les
faits stylisés dans nos données. Bien comprendre la structure des données et leur adéquation
avec les hypothèses d'un modèle est indispensable pour construire une modélisation
de qualité.
::::
:::

::: {.content-visible when-profile="en"}
:::: {.tip}
## Is a Mathematical Background Required for This Course?

This course assumes a desire to use `Python` intensively for data analysis within a rigorous statistical framework. It only briefly touches on the statistical or algorithmic foundations behind some of the techniques discussed, which are often the subject of dedicated teachings, particularly at ENSAE.

Not knowing these concepts does not prevent understanding the content of this website, as more advanced concepts are generally presented separately in dedicated boxes. The ease of using `Python` avoids the need to program a model oneself, which makes it possible to apply models without being an expert. Knowledge of models will be more necessary for interpreting results.

However, even though it is relatively easy to use complex models with `Python`, it is very useful to have some background on them before embarking on a modeling approach. This is one of the reasons why modeling comes later in this course: in addition to involving advanced statistical concepts, it is necessary to have understood the stylized facts in our data to produce relevant modeling. A thorough understanding of data structure and its alignment with model assumptions is essential for building high-quality models.
::::

:::

## Reproductibilité

::: {.content-visible when-profile="fr"}
Ce cours donne une place centrale à
la notion de reproductibilité. Cette exigence se traduit de diverses
manières dans cet enseignement,
en premier lieu en permettant que tous
les exemples et exercices de ce cours soient testés par le biais
de _notebooks_ `Jupyter`[^nb].

L'ensemble du contenu du site *web* est reproductible dans des environnements
informatiques divers. Il est bien sûr possible de copier-coller les morceaux
de code présents dans ce site, grâce au bouton {{< fa solid clipboard >}} présent au dessus
des exemples de code:

```{python}
x = "Essayez de me copier-coller" #<1>
```
1. Cliquez sur le bouton {{< fa solid clipboard >}} pour copier ce contenu et le coller ailleurs.


[^nb]: Un _notebook_ est un environnement interactif qui permet d'écrire et d'exécuter du code en direct. Il combine, dans un seul document, du texte, du code qui peut être exécuté et dont les sorties s'affichent après calculs. C'est extrêmement pratique pour l'apprentissage du langage `Python`. Pour plus de détails, consultez la [documentation officielle de Jupyter](https://jupyter.org/documentation).

Néanmoins, comme ce site présente de nombreux exemples, les allers et retours
entre un environnement de test de `Python` et celui-ci pourraient être
pénibles. Chaque chapitre est donc facilement récupérable sous forme de
_notebook_ `Jupyter` grâce à des boutons au début de chaque page.
Voici, par exemple, ces boutons pour le tutoriel `Numpy` :
:::

::: {.content-visible when-profile="en"}

This course places a central emphasis on the concept of reproducibility. This requirement is reflected in various ways throughout this teaching, primarily by ensuring that all examples and exercises in this course can be tested using `Jupyter` notebooks[^nb].

The entire content of the website is reproducible in various computing environments. It is, of course, possible to copy and paste the code snippets present on this site, using the {{< fa solid clipboard >}} button above the code examples:

```{python}
x = "Try to copy-paste me" #<1>
```
1. Click on the {{< fa solid clipboard >}} button to copy this content and paste it elsewhere.


However, since this site presents many examples, the back-and-forth between a Python testing environment and this site could be cumbersome. Each chapter is therefore easily retrievable as a `Jupyter` notebook via buttons at the beginning of each page. For example, here are those buttons for the `Numpy` tutorial:

:::

{{< badges
    fpath="/content/manipulation/01_numpy.qmd"
    printMessage="false"
>}}

::: {.content-visible when-profile="fr"}
Les recommandations concernant
les environnements à privilégier pour utiliser
ces notebooks sont reportées au prochain chapitre.

L'exigence de reproductibilité se manifeste également
dans le choix des exemples pris pour ce cours.
L'ensemble du contenu de ce site s'appuie sur des données
ouvertes, qu'il s'agisse de données françaises (principalement
issues de la plateforme
centralisatrice [`data.gouv`](https://www.data.gouv.fr) ou du site
_web_ de l'[Insee](https://www.insee.fr)) ou de données
américaines. Les résultats sont donc reproductibles pour quelqu'un
disposant d'un environnement identique[^environnement-identique].

[^environnement-identique]: Le fait d'ouvrir les chapitres sous la forme de _notebooks_ dans des environnements standardisés, ce qui sera proposé à partir du prochain chapitre, permet d'assurer que vous disposiez d'un environnement contrôlé. Les installations personnelles de `Python` ont toutes les chances d'avoir subies des bidouillages modifiant votre environnement et pouvant provoquer des erreurs inattendues et difficiles à comprendre: ce n'est donc pas un usage recommandé pour ce cours. Comme vous pourrez le découvrir dans le prochain chapitre, les environnements _cloud_ offrent un confort en ce qui concerne la standardisation des environnements.

:::: {.note}
Des chercheurs américains ont pu parler de crise de la reproductibilité dans le domaine
du _machine learning_ [@Reproducibilitycrisis]. Les dérives de l'écosystème de
la publication scientifique et les enjeux économiques derrière les publications
académiques dans le domaine du _machine learning_ ont une place privilégiée parmi
les facteurs pouvant l'expliquer.

Néanmoins, l'enseignement universitaire porte également une responsabilité
dans ce domaine. Les étudiants et chercheurs ne sont pas formés à ces sujets et s'ils
n'adoptent pas cette exigence tôt dans leur parcours, ils n'y seront plus forcément incités
ultérieurement. Pour cette raison, en plus de former à `Python` {{< fa brands python >}} et à la _data science_, ce cours
introduit à l'usage du
logiciel de contrôle de version `Git` {{< fa brands git-alt >}} dans une partie dédiée.
Tous les projets des élèves doivent être _open source_, ce qui est l'une des meilleures manières,
pour un enseignant, de trouver une consigne pour que les élèves produisent un code de qualité.
::::
:::

::: {.content-visible when-profile="en"}

Recommendations regarding
the preferred environments for using
these notebooks are deferred to the next chapter.

The requirement for reproducibility is also evident
in the choice of examples used in this course.
All content on this site relies on open data, whether it is French data (mainly
from the centralizing platform [`data.gouv`](https://www.data.gouv.fr) or the
website of [Insee](https://www.insee.fr)) or American data. Results are therefore reproducible for someone
with an identical environment[^identical-environment].

[^identical-environment]: Opening chapters as _notebooks_ in standardized environments, as will be proposed starting from the next chapter, ensures that you have a controlled environment. Personal installations of `Python` are likely to have undergone modifications that can alter your environment and cause unexpected and hard-to-understand errors: this is not a recommended use for this course. As you will discover in the next chapter, _cloud_ environments offer comfort regarding environment standardization.

:::: {.note}
American researchers have discussed a reproducibility crisis in the field
of _machine learning_ [@Reproducibilitycrisis]. Issues with the scientific
publishing ecosystem and the economic stakes behind academic publications
in the field of _machine learning_ are prominent factors that may explain this.

However, academic teaching also bears a responsibility
in this area. Students and researchers are not trained in these topics, and if they
do not adopt this requirement early in their careers, they may not be encouraged to do so later. For this reason, in addition to training in `Python` {{< fa brands python >}} and _data science_, this course
introduces the use of
the version control software `Git` {{< fa brands git-alt >}} in a dedicated section.
All student projects must be _open source_, which is one of the best ways
for a teacher to ensure that students produce quality code.
::::

:::


::: {.content-visible when-profile="fr"}
## Évaluation

Les élèves de l'ENSAE valident le cours grâce à
un projet approfondi.
Les éléments relatifs à l'évaluation du cours, ainsi qu'une
liste des projets déjà effectués, sont disponibles dans la
Section [Évaluation](/content/annexes/evaluation).
:::

::: {.content-visible when-profile="en"}
## Assessment

ENSAE students validate the course through
an in-depth project.
Details about the course assessment, as well as a
list of previously completed projects, are available in the
[Assessment](annexes/evaluation) section.
:::


::: {.content-visible when-profile="fr"}
# Plan du cours

Ce cours est une introduction aux enjeux de la _data science_ à
travers l'apprentissage du langage `Python`. Comme le terme _"data science"_
l'indique, une partie importante de ce cours est consacrée au travail sur les
données: récupération, structuration, exploration, mise en relation. C'est l'objet de la première
partie du cours
["Manipuler des données"](/content/manipulation/index.qmd) qui sert de fondement au reste du cours.
Malheureusement, de nombreuses formations en _data science_, statistiques appliquées ou sciences économiques et sociales,
font l'impasse sur
cette part du travail des _data scientists_ qu'on appelle parfois ["data wrangling"](https://en.wikipedia.org/wiki/Data_wrangling)
ou [_"feature engineering"_](https://en.wikipedia.org/wiki/Feature_engineering).
qui, en plus de représenter une part importante du temps de travail des _data scientists_, est indispensable
pour construire un modèle pertinent.

L'objectif de cette partie est d'illustrer les enjeux liés à la récupération
de plusieurs types de sources de données et à leur exploitation par le biais de `Python`. Les exemples seront diversifiés, pour illustrer la richesse des données qui peuvent être analysées avec `Python`: statistiques d'émissions communales de $CO_2$, données de transactions immobilières, diagnostics énergétiques des logements, données de fréquentation des stations vélib...

La deuxième partie est consacrée à la production de visualisations avec `Python`. Après avoir récupéré et nettoyé des données,
on désire généralement synthétiser celles-ci par le biais de tableaux, de productions graphiques ou de cartes. Cette partie est une introduction rapide à ce sujet (["Communiquer avec `Python`"](/content/visualisation/index.qmd)). Assez introductive, l'objectif de cette partie est surtout de donner quelques notions qui sont consolidées par la suite.

La troisième partie est consacrée à la modélisation à travers l'exemple fil rouge de la science électorale (["Modéliser avec `Python`"](/content/modelisation/index.qmd)). L'objectif de cette partie est d'illustrer la démarche scientifique du _machine learning_, les choix méthodologiques et techniques afférents et ouvrir vers les enjeux suivants qui seront évoqués dans la suite du cursus universitaire.

La quatrième partie du cours fait un pas de côté pour se consacrer aux enjeux spécifiques liés à l'exploitation des données textuelles. Il s'agit du chapitre d'["Introduction au _Natural Language Processing (NLP)"_ avec `Python`"](/content/NLP/index.qmd). Ce champ de recherche étant particulièrement actif, il ne s'agit que d'une introduction au sujet. Pour aller plus loin, se référer à @RN2020, chapitre 24.
:::

::: {.content-visible when-profile="en"}
# Course Outline

This course is an introduction to the issues of _data science_ through the learning of the `Python` language. As the term _"data science"_ suggests, a significant part of this course is dedicated to working with data: retrieval, structuring, exploration, and linking. This is the subject of the first part of the course
["Manipulating Data"](/content/manipulation/index.qmd), which serves as the foundation for the rest of the course. Unfortunately, many programs in _data science_, applied statistics, or social and economic sciences, overlook this part of the data scientist's work sometimes referred to as ["data wrangling"](https://en.wikipedia.org/wiki/Data_wrangling)
or [_"feature engineering"_](https://en.wikipedia.org/wiki/Feature_engineering), which, in addition to being a significant portion of the data scientist's work, is essential for building a relevant model.

The goal of this part is to illustrate the challenges related to retrieving various types of data sources and their exploitation using `Python`. The examples will be varied to illustrate the richness of the data that can be analyzed with `Python`: municipal $CO_2$ emission statistics, real estate transaction data, energy diagnostics of housing, Vélib station attendance data...

The second part is dedicated to producing visualizations with `Python`. After retrieving and cleaning data, one generally wants to synthesize it through tables, graphics, or maps. This part is a brief introduction to this topic (["Communicating with `Python`"](/content/visualisation/index.qmd)). Being quite introductory, the goal of this part is mainly to provide some concepts that will be consolidated later.

The third part is dedicated to modeling through the example of electoral science (["Modeling with `Python`"](/content/modelisation/index.qmd)). The goal of this part is to illustrate the scientific approach of _machine learning_, the related methodological and technical choices, and to open up to the following issues that will be discussed in the rest of the university curriculum.

The fourth part of the course takes a step aside to focus on specific issues related to the exploitation of textual data. This is the chapter on ["Introduction to _Natural Language Processing (NLP)_ with `Python`"](/content/nlp/index.qmd). This research field being particularly active, it is only an introduction to the subject. For further reading, refer to @RN2020, chapter 24.
:::

::: {.content-visible when-profile="fr"}
# Références {-}
:::

::: {.content-visible when-profile="en"}
# References {-}
:::

::: {#refs}
:::

