---
title: "Quelques exercices de rappels pour se remettre en selle"
description: |
    Un chapitre consacré à divers exercices pour réviser les
    principes de base de la syntaxe `Python` et des objets
    utilisés par le langage. 
echo: false
---

::: {.content-visible when-format="html"}

:::: {.content-visible when-profile="fr"}
[`Pandas`](http://pandas.pydata.org/) et [`Numpy`](http://www.numpy.org/), les premiers _packages_ de notre parcours initiatique, 
sont
essentiels pour manipuler les données. 
Néanmoins, il est nécessaire de ne pas faire l'impasse sur les fondements 
du langage `Python` lorsqu'on découvre ce langage. Une bonne compréhension des éléments structurants du
langage permet de mieux comprendre la logique des packages de _data science_, de mieux comprendre les erreurs rencontrées et entraîne une plus grande productivité et liberté.

Pour découvrir les objets de base et la structure du langage, une série de _notebooks_ est mise à disposition ci-dessous. Le parcours est à la carte, vous pouvez faire ces _notebooks_ dans le désordre ou n'en faire qu'une partie si vous avez de bons souvenirs sur le contenu couvert par certains. 

Après avoir révisé, la suite du parcours se trouve dans la partie ["Manipuler les données"](/content/manipulation/index.qmd)

# Notebooks de révision {.unnumbered}
::::

:::: {.content-visible when-profile="en"}
[`Pandas`](http://pandas.pydata.org/) and [`Numpy`](http://www.numpy.org/), the first _packages_ of our introductory journey, 
are
essential for manipulating data. 
However, it is important not to overlook the fundamentals of the `Python` language when discovering it. A good understanding of the fundamental elements of the language helps to better grasp the logic of _data science_ packages, understand the errors encountered, and results in greater productivity and freedom.

To explore basic objects and the structure of the language, a series of _notebooks_ is provided below. The course is flexible; you can work through these _notebooks_ in any order or only complete parts of them if you are already familiar with some of the content.

After spending some time reviewing your `Python` skills, you can find the next part of the course in the [“Data wrangling”](/content/manipulation/index.qmd) section.

# Review notebooks {.unnumbered}
::::


```{ojs}
await teaserList(listeChapters)
```

```{ojs}
isEnglish = window.location.href.includes("/en/")
lang = (isEnglish) ? "en" : "fr"
textButton = (isEnglish) ? "Launch" : "Lancer"
```

```{ojs}
url = "https://minio.lab.sspcloud.fr/lgaliana/python-ENSAE/inputs/educationalresources.json"
content = d3.json(url)
fondamentaux = content.parts.filter(part => part.name.fr == "Fondamentaux du langage")
listeChapters = fondamentaux[0].parts
```

```{ojs}
function renderTeaser(doc) {
  const {
    name,
    abstract,
    imageUrl,
    deploymentUrl,
    tags,
    authors,
  } = doc;

  // Generate the HTML for each tag with space between them
  const tagsHTML = tags
    .map((tag) => `<span class="topic" style="margin-right: 8px; border: 2px solid #C4C4C4; border-radius: 5px; width: fit-content;">${tag}</span>`)
    .join("");

  // Generate the HTML for each author with space between them
  const authorsHTML = authors
    .map((author) => `<span class="author" style="margin-right: 8px;">${author}</span>`)
    .join("");

    const localizedName = (lang === "en") ? name.en : name.fr;
    const localizedDeploymentUrl = (lang === "en") ? deploymentUrl.en : deploymentUrl.fr;
    const localizedAbstract = (lang === "en") ? abstract.en : abstract.fr;

  return `
    <div class="gridcard-item">
      <div class="gridcard-body">
        <a class="gridcard-title" href="${localizedDeploymentUrl}">${localizedName}</a>
        ${localizedAbstract ? `<p class="gridcard-description">${localizedAbstract}</p>` : ''}
        <a class="btn btn-outline-primary btn-launch" href="${localizedDeploymentUrl}" target="_blank">${textButton}</a>
      </div>
    </div>
  `;
}
```

```{ojs}
function teaserList(docs, css = THEME_TEASERS) {
  const id = DOM.uid().id;
  return html`<div id="${id}">
    <div class=listing-grid>${docs.map(doc => renderTeaser(doc))}
  `;
}
```




```{ojs}
import { THEME_TEASERS, ICON_LIKE, getScopedStyle } from "@mootari/notebook-teasers";
```


:::

::: {.content-visible when-format="ipynb"}
Le contenu de cette page est disponible sur [le site web du cours](pythonds.linogaliana.fr/content/getting-started/04_revisions.html)
:::