::: {.content-visible when-profile="fr"}
# Objectifs du cours

## Initier à la démarche de la _data science_

Ce cours s’adresse aux praticiens de la _data science_,
discipline entendue ici au sens large comme la __combinaison de techniques issues des mathématiques, de la statistique et de l’informatique pour produire de la connaissance utile à partir de données__.
Comme la _data science_ n’est pas uniquement une discipline scientique mais vise également à fournir un ensemble d’outils pour répondre à des objectifs opérationnels, l'apprentissage du principal outil nécessaire à l'acquisition de connaissances en _data science_, à savoir le langage `Python`, est également
l'occasion d'évoquer la démarche scientifique rigoureuse à adopter face à des données. Ce cours a pour objectif de présenter la démarche face à un jeu de données, les problèmes rencontrés, les solutions pour les surmonter et les implications que ces dernières peuvent avoir. Il ne s'agit donc pas que d'un cours sur un outil technique, désincarné de problématiques scientifiques.
:::

::: {.content-visible when-profile="en"}
# Course Objectives

## Introducing the data science approach

This course is intended for practitioners of _data science_, understood here in the broadest sense as the **combination of techniques from mathematics, statistics, and computer science to extract useful knowledge from data**.

Since _data science_ is not only an academic discipline but also a practical field aimed at achieving operational goals, learning its main tool—namely, the `Python` programming language—goes hand in hand with adopting a rigorous, scientific approach to data.

The objective of this course is to explore how to approach a dataset, identify and address common challenges, develop appropriate solutions, and reflect on their broader implications. It is therefore not merely a course about a technical tool, disconnected from scientific reasoning, but one rooted in understanding data through both technical and conceptual lenses.

:::


::: {.content-visible when-profile="fr"}
:::: {.tip}
## Faut-il avoir un _background_ en mathématiques pour ce cours ?

Ce cours présuppose qu'on désire faire un usage de `Python` intense en données dans un cadre statistique rigoureux. Il ne revient que de manière secondaire sur les fondements statistiques ou algorithmiques derrière certaines des techniques évoquées, souvent l'objet d'enseignements dédiés, notamment à l'ENSAE.

Ne pas connaître ces notions n'empêche ainsi pas de comprendre
le contenu de ce site *web* car les concepts plus avancés sont généralement présentés à part, dans des encadrés dédiés. La facilité d'usage de `Python` évite de devoir programmer soi-même un modèle, ce qui rend possible l'application de modèles dont on n'est pas expert. La connaissance des modèles sera plutôt nécessaire dans l'interprétation des résultats.

Pour autant, même s'il est relativement facile d'utiliser des modèles complexes avec `Python`, il est fort utile d'avoir du recul sur ceux-ci avant de se lancer dans une démarche de modélisation. Il s'agit de l'une des raisons pour lesquelles la modélisation arrive si tardivement dans ce cours: en plus de faire appel à des concepts statistiques avancés, il est nécessaire, pour produire une modélisation pertinente, d'avoir appréhendé les faits stylisés dans nos données. Bien comprendre la structure des données et leur adéquation avec les hypothèses d'un modèle est indispensable pour construire une modélisation de qualité.

::::
:::

::: {.content-visible when-profile="en"}
:::: {.tip}
## Do I need a math background for this course?

This course assumes you are interested in using data-intensive `Python` within a rigorous statistical framework. It does not delve deeply into the statistical or algorithmic foundations of the techniques presented - many of which are covered in dedicated courses, particularly at ENSAE.

That said, not being familiar with these concepts shoud not prevent from following this course. More advanced ideas are typically introduced separately, in dedicated callout boxes. Thanks to Python's ease of use, you will not need to implement complex models from scratch - making it possible to apply techniques even if you are not an expert in the underlying theory. What *is* important, however, is having enough understanding to correctly interpret the results.

Still, while `Python` makes it relatively easy to run sophisticated models, it is very helpful to have some perspective before diving into modeling. That explains why modeling appears later in the course: in addition to relying on advanced statistical concepts, effective modeling also requires a solid understanding of the data. You need to identify key patterns and assess whether your data fits the assumptions of the model. Without this foundation, it is difficult to build models that are truly meaningful or reliable.
::::

:::

::: {.content-visible when-profile="fr"}
## Reproductibilité

Ce cours donne une place centrale à la notion de reproductibilité. Cette exigence se traduit de diverses
manières dans cet enseignement, en premier lieu en permettant que tous les exemples et exercices de ce cours soient testés par le biais de _notebooks_ `Jupyter`[^nb].

L'ensemble du contenu du site *web* est reproductible dans des environnements informatiques divers. Il est bien sûr possible de copier-coller les morceaux de code présents dans ce site, grâce au bouton {{< fa solid clipboard >}} présent au dessus
des exemples de code:

```{python}
x = "Essayez de me copier-coller" #<1>
```
1. Cliquez sur le bouton {{< fa solid clipboard >}} pour copier ce contenu et le coller ailleurs.


[^nb]: Un _notebook_ est un environnement interactif qui permet d'écrire et d'exécuter du code en direct. Il combine, dans un seul document, du texte, du code qui peut être exécuté et dont les sorties s'affichent après calculs. C'est extrêmement pratique pour l'apprentissage du langage `Python`. Pour plus de détails, consultez la [documentation officielle de Jupyter](https://jupyter.org/documentation).

Néanmoins, comme ce site présente de nombreux exemples, les allers et retours entre un environnement de test de `Python` et celui-ci pourraient être pénibles. Chaque chapitre est donc facilement récupérable sous forme de _notebook_ `Jupyter` grâce à des boutons au début de chaque page. Voici, par exemple, ces boutons pour le premier chapitre consacré à `Pandas` :
:::

::: {.content-visible when-profile="en"}

## Reproducibility

This course places strong emphasis on reproducibility. This principle is reflected in several ways. First and foremost, by ensuring that all examples and exercises can be run and tested using `Jupyter` _notebooks_[^nb-en].

All content on the website is designed to be reproducible across different computing environments. Of course, you're free to copy and paste code snippets directly from the site using the {{< fa solid clipboard >}} button available at the top of each code block.

[^nb-en]: Jupyter notebooks are interactive documents that allow you to combine code, text, and visualizations in a single file. They’re widely used in data science and education to make code both readable and executable.

```{python}
x = "Try to copy-paste me" #<1>
```
1. Click on the {{< fa solid clipboard >}} button to copy this content and paste it elsewhere.


However, since this site includes many examples, constantly switching between a `Python` environment and the website can become tedious. To make things easier, each chapter can be downloaded as a `Jupyter` _notebook_ using the buttons provided at the top of each page.

For example, here are the buttons for the first chapter on `Pandas`:

:::

{{< badges
    fpath="/content/manipulation/02_pandas_intro.qmd"
    printMessage="false"
>}}

:::: {.content-visible when-profile="fr"}
Les recommandations concernant les environnements à privilégier pour utiliser ces notebooks sont reportées au prochain chapitre.

L'exigence de reproductibilité se manifeste également
dans le choix des exemples pris pour ce cours. L'ensemble du contenu de ce site s'appuie sur des données ouvertes, qu'il s'agisse de données françaises (principalement issues de la plateforme centralisatrice [`data.gouv`](https://www.data.gouv.fr) ou du site _web_ de l'[Insee](https://www.insee.fr)) ou de données américaines. Les résultats sont donc reproductibles pour quelqu'un disposant d'un environnement identique[^environnement-identique].

[^environnement-identique]: Le fait d'ouvrir les chapitres sous la forme de _notebooks_ dans des environnements standardisés, ce qui sera proposé à partir du prochain chapitre, permet d'assurer que vous disposiez d'un environnement contrôlé. Les installations personnelles de `Python` ont toutes les chances d'avoir subies des bidouillages modifiant votre environnement et pouvant provoquer des erreurs inattendues et difficiles à comprendre: ce n'est donc pas un usage recommandé pour ce cours. Comme vous pourrez le découvrir dans le prochain chapitre, les environnements _cloud_ offrent un confort en ce qui concerne la standardisation des environnements.

::: {.note}
Des chercheurs américains ont pu parler de crise de la reproductibilité dans le domaine du _machine learning_ [@Reproducibilitycrisis]. Les dérives de l'écosystème de
la publication scientifique et les enjeux économiques derrière les publications académiques dans le domaine du _machine learning_ ont une place privilégiée parmi les facteurs pouvant l'expliquer.

Néanmoins, l'enseignement universitaire porte également une responsabilité dans ce domaine. Les étudiants et chercheurs ne sont pas formés à ces sujets et s'ils n'adoptent pas cette exigence tôt dans leur parcours, ils n'y seront plus forcément incités ultérieurement. Pour cette raison, en plus de former à `Python` {{< fa brands python >}} et à la _data science_, ce cours introduit à l'usage du logiciel de contrôle de version `Git` {{< fa brands git-alt >}} dans une partie dédiée.

Tous les projets des élèves doivent être _open source_, ce qui est l'une des meilleures manières, pour un enseignant, de trouver une consigne pour que les élèves produisent un code de qualité.
:::

::::

::: {.content-visible when-profile="en"}

Recommendations on the best environments for using these notebooks are provided in the next chapter.

The focus on reproducibility is also reflected in the choice of examples used throughout the course. All content on this site is based on _open data_, sourced either from French platforms - primarily the centralized portal [`data.gouv`](https://www.data.gouv.fr), which aggregates public datasets from French institutions, or the official statistics agency [Insee](https://www.insee.fr), France’s national institute for statistics and economic studies - or from U.S. datasets. This ensures that results are reproducible for anyone working in an identical environment[^identical-environment-en].

[^identical-environment-en]: Opening the chapters as _notebooks_ in standardized environments - something explained in the next chapter - ensures you are working in a controlled setup. Personal `Python` installations often involve tweaks and adjustments that can alter your environment and lead to unexpected, hard-to-diagnose errors. For this reason, such local setups are not recommended for this course. As you’ll see in the next chapter, _cloud-based_ environments offer the advantage of consistent, preconfigured setups that greatly improve reliability and ease of use.


:::: {.note}
American researchers have described a reproducibility crisis in the field of _machine learning_ [@Reproducibilitycrisis-en]. The distortions of the scientific publishing ecosystem - combined with the economic incentives driving academic publications in _machine learning_ - are often cited as major contributing factors.

However, university education also bears a share of the responsibility. Students and researchers are rarely trained in the principles of reproducibility, and if these practices are not introduced early in their careers, they are unlikely to adopt them later. This is why, in addition to teaching `Python` {{< fa brands python >}} and _data science_, this course includes a dedicated section on using version control with `Git` {{< fa brands git-alt >}}.

All student projects are required to be _open source_—one of the most effective ways for instructors to encourage high-quality, transparent, and reproducible code.
::::

:::


::: {.content-visible when-profile="fr"}
## Évaluation

Les élèves de l'ENSAE valident le cours grâce à
un projet approfondi. Les éléments relatifs à l'évaluation du cours, ainsi qu'une liste des projets déjà effectués, sont disponibles dans la section [Évaluation](/content/annexes/evaluation).
:::

::: {.content-visible when-profile="en"}
## Assessment

Students at ENSAE complete the course by working on an in-depth project. Details on how the course is assessed, along with a list of past student projects, can be found in the [Evaluation](/content/annexes/evaluation) section.

:::
