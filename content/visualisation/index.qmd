---
title: "Partie 2: visualiser les données"
date: 2023-07-16T13:00:00Z
categories:
  - Introduction
  - Visualisation
description: |
  Cette partie présente les outils pour visualiser des
  données avec `Python`, qu'il s'agisse de graphiques
  figés (`matplotlib`, `seaborn`, `geoplot`...) ou de
  visualisation réactives (`plotly`, `folium`, etc.)
slug: visualisation
image: https://minio.lab.sspcloud.fr/lgaliana/generative-art/pythonds/snake-chart.png
bibliography: ../../reference.bib
---

La visualisation de données est l'art et la science de représenter visuellement des informations complexes et abstraites à l'aide d'éléments visuels.
Son objectif principal est de synthétiser l'information présente dans un ensemble de données afin de faciliter
la compréhension des enjeux de celle-ci pour une analyse ultérieure. 
La visualisation de données permet, entre autres, de mettre en évidence des tendances, des corrélations ou
des anomalies qui pourraient être difficiles voire impossibles à saisir simplement en examinant des données brutes, ces dernières nécessitant
une certaine mise en contexte pour porter du sens. 

La visualisation de données joue un rôle crucial dans le
processus d'analyse de données en fournissant des moyens visuels pour explorer, interpréter et communiquer des informations.
Elle facilite la communication entre experts de la données, décideurs et grand public,
en permettant de raconter des histoires basées sur les données de manière plus convaincante et engageante.

La visualisation de données a une place à part dans 
l'ensemble des techniques de la _data science_. 
Elle intervient à tous les stades du processus de 
production de la donnée, de
l'amont (analyse exploratoire) à
l'aval (restitution à des publics multiples) et
peut, si elle est bien construite, permettre de
saisir de manière intuitive la structure des données
ou les enjeux de son analyse. 

Art de la synthèse, la visualisation de données
est également l'art de raconter une histoire et
peut même, lorsqu'elle est bien construite, prétendre
au rang de production artistique. 
La _dataviz_ est un métier en soi dont on trouve de 
plus en plus de praticiens dans les titres de presse
ou dans des entreprises
spécialisées (`Datawrapper` par exemple). 

Sans prétendre construire
des visualisations aussi riches que celles des spécialistes,
tout _data scientist_ se doit d'être en mesure de pouvoir
produire rapidement quelques visualisations permettant
de synthétiser les jeux de données à sa disposition. 
Une visualisation claire et lisible tout en restant simple
peut être meilleure qu'un discours pour faire passer un message.
Je recommande notamment
ce [post de blog](https://www.icem7.fr/datavisualisation/recreation-recreation-semiologique/)
d'Eric Mauvière qui revient sur deux graphiques dans une publication
récente
du [Service statistique du Ministère de la Santé (DREES)](https://drees.solidarites-sante.gouv.fr/publications-communique-de-presse/etudes-et-resultats/mesures-socio-fiscales-2017-2022-une-hausse)
et montre la manière dont on peut améliorer le message transmis
par des figures :

::: {#fig-dataviz-amelioree1 layout-ncol=2 layout-valign="bottom"}

![Figure 1 originale](https://www.icem7.fr/wp-content/uploads/2023/08/recreation-aires1.png){group="figure1-mauviere"}

![Figure 1 modifiée](https://www.icem7.fr/wp-content/uploads/2023/08/recreation-aires35.png){group="figure1-mauviere"}

Décomposition du revenu disponible d'une personne seule en juillet 2022, selon son salaire brut
:::


::: {#fig-dataviz-amelioree2 layout-ncol=2 layout-valign="bottom"}

![Figure 2 originale](https://www.icem7.fr/wp-content/uploads/2023/08/recreation-barres1.png){group="figure2-mauviere"}

![Figure 2 modifiée](https://www.icem7.fr/wp-content/uploads/2023/08/recreation-barres35.png){group="figure2-mauviere"}

Evolution du revenu disponible d'une personne seule entre juillet 2017 et juillet 2022, selon son niveau de salaire brut
:::

De même qu'un discours, une visualisation est une communication
pour laquelle un locuteur - la personne construisant la visualisation - 
cherche à transmettre une information à un récepteur - éventuellement
la même personne que le locuteur puisqu'une visualisation peut 
être construite pour soi-même dans une analyse exploratoire. Il n'est
donc pas surprenant qu'à l'époque où la sémiologie occupait une 
part importante dans les débats intellectuels, notamment autour
de la figure de Roland Barthes, le concept de sémiologie 
graphique ait émergé
autour de la personne de Jacques Bertin [@bertin1967semiologie; @palsky2017semiologie]. 
Cette approche permet de réfléchir sur la pertinence des
techniques mises en oeuvre pour transmettre un message
graphique et de nombreuses visualisations, si elles
suivaient quelques-unes de ces règles, pourraient
être améliorées à peu de frais. 
L'Insee a publié, il y a quelques années, un guide de 
sémiologie graphique très utile qu'il
est intéressant de consulter de temps en temps [@inseeSemiologie].

Pour revenir à notre cours,
nous présenterons dans cette partie quelques librairies
et visualisations basiques en `Python` permettant de
partir sur de bonnes bases. Les ressources pour 
approfondir et progresser dans l'art de la visualisation
ne manquent pas, comme [cet ouvrage](https://clauswilke.com/dataviz/) [@wilke2019fundamentals]. 


## L'écosystème `Python` {.unnumbered}

L'écosystème `Python` pour la valorisation de données est très riche et
très éclaté.
Il est
possible de consacrer des livres entiers à celui-ci [@dale2022data].
`Python` propose
de nombreuses librairies pour produire de manière rapide et relativement
simple des visualisations de données[^1]. 

Les librairies graphiques se distinguent principalement en deux familles:

- Les librairies de __représentations figées__. Celles-ci ont plutôt vocation à être intégrées
dans des publications figées type PDF ou documents texte. Nous présenterons 
principalement `Matplotlib` et `Seaborn` mais il en existe d'autres,
comme [`Plotnine`](https://plotnine.readthedocs.io/en/stable/).
- Les librairies de __représentations dynamiques__.  Celles-ci sont adaptées à des représentations
_web_ et offrent la possibilité aux lecteurs d'agir sur la représentation graphique affichée. 
Les librairies qui proposent ces fonctionnalités reposent généralement sur `JavaScript`, l'écosystème
du développement _web_, pour lequel elles offrent un point d'entrée via `Python`. 
Nous évoquerons principalement `Plotly` et `Folium` dans cette famille mais il existe de nombreux
autres _frameworks_ dans ce domaine[^2].


[^1]: Pour être honnête, `Python` est sur ce point un peu moins agréable
que `R` qui bénéficie de
l'incontournable librairie [`ggplot2`](https://juba.github.io/tidyverse/08-ggplot2.html).

    N'étant pas
construite sur la [grammaire des graphiques](http://r.qcbs.ca/workshop03/book-fr/la-grammaire-des-graphiques-gg.html),
la principe librairie de graphiques en `Python` qu'est `Matplotlib` est plus fastidieuse
à utiliser que `ggplot2`. 

    [`seaborn`](https://seaborn.pydata.org/), que nous présenterons,
facilite un peu le travail de représentation graphique mais, là encore, il est difficile de faire
plus malléable et universel que `ggplot2`.

    La librairie [`plotnine`](https://plotnine.readthedocs.io/en/stable/) vise à proposer une implémentation similaire
à `ggplot` pour les utilisateurs de `Python`. Son développement est à suivre. 


[^2]: A cet égard, je recommande vivement de suivre l'actualité de la _dataviz_
sur la plateforme [`Observable`](https://observablehq.com/) qui tend à
rapprocher les communautés des spécialistes de la _dataviz_ et des analystes
de données. La librairie [`Plot`](https://observablehq.com/plot/) pourrait devenir
un nouveau standard dans les prochaines années, sorte d'intermédiaire
entre `ggplot` et `d3`. 

Dans le domaine de la visualisation, ce cours adopte le parti pris
d'explorer quelques
librairies centrales à partir d'un nombre restreint d'exemples en
répliquant des graphiques qu'on peut trouver sur le site d'*open data* de la 
mairie de Paris. 
La meilleure école pour la visualisation est la pratique sur des jeux de données. 

### Les applications de visualisation {.unnumbered}

Cette partie du cours se focalise sur des représentations synthétiques simples. 
Elle n'évoque pas (_encore ?_) la construction d'applications de visualisation
de données où un ensemble de graphiques se mettent à jour de manière synchrone
en fonction d'actions d'utilisateurs. 

Ceci dépasse en effet le cadre d'un cours d'introduction car cela implique 
de maîtriser des concepts plus complexes comme l'interaction entre une page
_web_ et un serveur (local). Néanmoins, j'ai déjà construit
avec [Romain Avouac](https://github.com/avouacr)
un [tutoriel 101](https://inseefrlab.github.io/funathon2023_sujet4/) très détaillé sur `Streamlit`
(permettant de créer une [application type `Yuka`](https://myyuka.lab.sspcloud.fr/))
pour une formation à l'Insee. 


## Résumé de cette partie {.unnumbered}

Cette partie est divisée en deux et chaque chapitre est lui-même
dual, selon qu'on s'intéresse aux représentations figées
ou dynamiques :

- Dans un premier temps, nous évoquerons des
représentations graphiques standards (histogrammes, diagrammes
en barre...) pour synthétiser certaines informations quantitatives ;
    + Les représentations fixes reposeront sur `Pandas`, `Matplotlib` et `Seaborn`
    + Les graphiques réactifs s'appuieront sur `Plotly`
- Dans un deuxième temps, nous présenterons les représentations
cartographiques:
    + Les cartes fixes avec `Geopandas` ou `Geoplot`
    + Les cartes réactives avec `Folium` (adaptation `Python` de la librairie `Leaflet.js`)


## Références utiles {.unnumbered}

La visualisation de données est un art qui s'apprend, au début, principalement
par la pratique. Néanmoins, il n'est pas évident de produire
des visualisations lisibles et ergonomiques
et il est utile de s'inspirer d'exemples de
spécialistes (les grands titres de presse disposent d'excellentes visualisations).

Voici quelques ressources utiles sur ces sujets :

- [`Datawrapper`](https://blog.datawrapper.de/) propose un excellent blog sur les 
bonnes pratiques de visualisation, notamment
avec les articles de [Lisa Charlotte Muth](https://lisacharlottemuth.com/). Je recommande notamment cet article sur
les [couleurs](https://blog.datawrapper.de/emphasize-with-color-in-data-visualizations/) ou
celui-ci sur les [textes](https://blog.datawrapper.de/text-in-data-visualizations/) ;
- Le [blog d'Eric Mauvière](https://www.icem7.fr/) ;
- _["La Sémiologie graphique de Jacques Bertin a cinquante ans"](https://visionscarto.net/la-semiologie-graphique-a-50-ans)_ ;
- Les [visualisations _trending_](https://observablehq.com/explore) sur `Observable` ;
- Le _New York Times_ (les rois de la _dataviz_) revient tous les ans sur les meilleures visualisations
de l'année dans la veine du [_data scrollytelling_](https://makina-corpus-blog-scrollytelling.netlify.app/). Voir par exemple la [rétrospective de l'année 2022](https://www.nytimes.com/interactive/2022/12/28/us/2022-year-in-graphics.html).

Et quelques références supplémentaires, citées dans cette introduction :

::: {#refs}
:::


