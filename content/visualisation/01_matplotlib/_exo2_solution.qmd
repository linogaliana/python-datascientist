```{python}
#| output: false
import seaborn as sns
import matplotlib.pyplot as plt

# 2. Graphique avec sns.catplot
g = sns.catplot(
    x='sum_counts', y='nom_compteur',
    data=df1, kind = "bar",
    height = 5, aspect = 4,
    color = "red")
```

::: {.content-visible when-profile="fr"}
À l'issue de la question 1, c'est-à-dire en utilisant `seaborn` pour reproduire de manière minimale un _barplot_, on obtient la @fig-fig1-exo2-fr. C'est déjà un peu plus propre que la version précédente (@fig-figure1-exo1-fr) et cela peut déjà suffire pour un travail exploratoire.
:::

::: {.content-visible when-profile="en"}
At the end of question 1, i.e. using `seaborn` to reproduce a minimal barplot, we obtain @fig-fig1-exo2-en. This is already a little cleaner than the previous version (@fig-figure1-exo1-en) and may already be sufficient for exploratory work.
:::

::: {.content-visible when-profile="fr"}

```{python}
#| echo: false
#| label: fig-fig1-exo2-fr
#| caption: "Deuxième ébauche de la figure \"Les 10 compteurs avec la moyenne horaire la plus élevée\""
g.fig
```

:::


::: {.content-visible when-profile="en"}

```{python}
#| echo: false
#| label: fig-fig1-exo2-en
#| caption: "Second draft for \"Les 10 compteurs avec la moyenne horaire la plus élevée\""
g.fig
```

:::


```{python}
#| output: false

# Question 3
g = sns.catplot(
    x='sum_counts', y='nom_compteur',
    data=df1,
    kind = "bar", height = 5, aspect = 4, color = "red"
)
g.set_axis_labels(xaxis, yaxis)
plt.title(title)
```

::: {.content-visible when-profile="fr"}
A la fin de l'exercice, on obtient une figure proche de celle qu'on essaie de reproduire. La principale différence tient à l'absence, sur la nôtre, des valeurs numériques.
:::

::: {.content-visible when-profile="en"}
At the end of the exercise, we obtain a figure close to the one we are trying to reproduce. The main difference is that ours does not include numerical values.
:::

```{python}
#| output: false

# Question 4
sns.set_style("ticks", {"xtick.color": "red"})
g = sns.catplot(x='sum_counts', y='nom_compteur', data=df1, kind = "bar", height = 10, aspect = 2, color = "red")
g.set_axis_labels(xaxis, yaxis)
plt.title(title)
```

::: {.content-visible when-profile="fr"}
```{python}
#| echo: false
#| label: fig-fig2-exo2-fr
#| fig-caption: "Dernière ébauche de la figure \"Les 10 compteurs avec la moyenne horaire la plus élevée\""
g.fig
```
:::

::: {.content-visible when-profile="en"}
```{python}
#| echo: false
#| label: fig-fig2-exo2-en
#| fig-caption: "Final draft for \"Les 10 compteurs avec la moyenne horaire la plus élevée\" using seaborn"
g.fig
```
:::
