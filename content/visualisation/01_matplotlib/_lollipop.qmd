::: {.content-visible when-profile="fr"}
## Les lollipop chart

Les diagrammes en bâtons (_barplot_) sont extrêmement communs, sans doute à cause de l'héritage d'Excel où ces graphiques sont faisables en deux clics. Néanmoins, en ce qui concerne le message à transmettre, ils sont loin d'être parfaits. Par exemple, les barres prennent beaucoup d'espace visuel, ce qui peut brouiller le message à transmettre sur le rapport entre les observations.

Sur le plan sémiologique, c'est-à-dire sur le plan de l'efficacité du message à transmettre, les _lollipop charts_ sont préférables : ils transmettent la même information mais avec moins de signes visuels pouvant brouiller sa compréhension.

Les _lollipop charts_ ne sont pas parfaits non plus mais sont un peu plus efficaces pour transmettre le message. Pour en savoir plus sur les alternatives au _barplot_, la conférence d'Eric Mauvière pour le réseau des _data scientists_ de la statistique publique, dont le message principal est _"Désempilez vos figures"_, mérite le détour ([disponible sur le site ssphub.netlify.app/ {{< fa arrow-up-right-from-square >}}](https://ssphub.netlify.app/talk/2024-02-29-mauviere/)).


Avec `plotnine`, il n'est pas trop complexe de créer un _lollipop chart_. Il suffit d'avoir deux géométries:

1. Le manche de la sucette est créé avec un `geom_segment` ;
2. Le bout de la sucette est créé avec un `geom_point`
:::


::: {.content-visible when-profile="en"}

Bar charts (_barplot_) are extremely common, likely due to the legacy of Excel, where these charts can be created with just a couple of clicks. However, in terms of conveying a message, they are far from perfect. For example, the bars take up a lot of visual space, which can obscure the intended message about relationships between observations.

From a semiological perspective, that is, in terms of the effectiveness of conveying a message, _lollipop charts_ are preferable: they convey the same information but with fewer visual elements that might clutter understanding.

_Lollipop charts_ are not perfect either but are slightly more effective at conveying the message. To learn more about alternatives to bar charts, Eric Mauvière's talk for the public statistics data scientists network, whose main message is _"Unstack your figures"_, is worth exploring ([available on ssphub.netlify.app/ {{< fa arrow-up-right-from-square >}}](https://ssphub.netlify.app/talk/2024-02-29-mauviere/)).

With `plotnine`, it is not too complicated to create a lollipop chart. All you need are two geometries:

1. The stick of the lollipop is created with a `geom_segment`;
2. The tip of the lollipop is created with a `geom_point`.
:::

::: {.light-content}
```{python}
#| echo: true
#| label: fig-lollipop-light
#| output: false
p = (
    ggplot(df1, aes(x="nom_compteur", y="sum_counts")) +
    geom_segment(aes(x="nom_compteur", xend="nom_compteur", y=0, yend="sum_counts"), size=1) +
    geom_point(color="white", fill="red", size=6, stroke=1, shape="o") +
    coord_flip() +
    labs(
        title=title,
        x=xaxis,
        y=yaxis
    ) +
    theme_minimal()
)

p
```

```{python}
#| echo: false
#| output: false
p_light = p
```

:::

::: {.dark-content}

```{python}
#| echo: true
#| label: fig-lollipop-dark
#| output: false
p = (
    ggplot(df1, aes(x="nom_compteur", y="sum_counts")) +
    geom_segment(
        aes(x="nom_compteur", xend="nom_compteur", y=0, yend="sum_counts"), size=1, color = "white"
    ) +
    geom_point(color="white", fill="red", size=6, stroke=1, shape="o") +
    coord_flip() +
    labs(
        title=title,
        x=xaxis,
        y=yaxis
    ) +
    theme_minimal() +
    theme(
        plot_background=element_rect(fill="black"),
        panel_background=element_rect(fill="black"),
        line=element_line(color="black"),
        axis_text_x=element_text(color="white"),
        axis_title_x=element_text(color="white"),
        text=element_text(color="white"),
        plot_title=element_text(ha="left")
    )
)

p
```

```{python}
#| echo: false
#| output: false
p_dark = p
```

:::

```{python}
#| echo: false
#| renderings: [light, dark]
p_light.show()
p_dark.show()
```

::: {.content-visible when-profile="fr"}
Grâce à cette représentation alternative, on se représente ici mieux la différence entre le compteur le plus utilisé et les autres. 

Le _lollipop chart_ est une représentation assez classique en biostatistiques ou économie pour représenter les _odds ratio_ issus d'une modélisation logistique. En l'occurrence, les lignes servent généralement à représenter la taille de l'intervalle de confiance dans cette littérature. 

![Une variante des _lollipop charts_ pour représenter les _odds ratio_ [@galianacaracteristiques]](./01_matplotlib/capture_odds_ratio.png)

Une variante des _lollipop chart_, popularisée notamment par [_datawrapper_ {{< fa arrow-up-right-from-square >}}](https://www.datawrapper.de/){target="_blank"} permet aussi de représenter des intervalles: le _range plot_. Il permet à la fois de se représenter la hiérarchie entre des observations et l'amplitude d'un phénomène. 

![Exemple de _range plot_ par Eric Mauvière ([ssphub.netlify.app/ {{< fa arrow-up-right-from-square >}}](https://ssphub.netlify.app/talk/2024-02-29-mauviere/){target="_blank"}).](https://ssphub.netlify.app/talk/2024-02-29-mauviere/mauviere.png)

:::


::: {.content-visible when-profile="en"}
This alternative representation provides a clearer picture of the difference between the most frequently used counter and the others.

The lollipop chart is a fairly standard representation in biostatistics and economics for representing odds ratios derived from logistic modelling. In this case, the lines are generally used to represent the size of the confidence interval in this literature. 

![A variant of lollipop charts to represent odds ratios [@galianacaracteristiques]](./01_matplotlib/capture_odds_ratio.png)

A variant of the lollipop chart, popularised in particular by [datawrapper {{< fa arrow-up-right-from-square >}}](https://www.datawrapper.de/){target="_blank"}, also allows intervals to be represented: the range plot. It allows both the hierarchy between observations and the amplitude of a phenomenon to be represented. 

![Example of a range plot by Eric Mauvière ([ssphub.netlify.app/ {{< fa arrow-up-right-from-square >}}](https://ssphub.netlify.app/talk/2024-02-29-mauviere/){target="_blank"}).] (https://ssphub.netlify.app/talk/2024-02-29-mauviere/mauviere.png)
:::
