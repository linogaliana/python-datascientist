```{python}
# Questions 1
df['month'] = df['date'].dt.to_period('M')
```

```{python}
# Question 2
count_by_month_since_2022 = (
    df.loc[df['date'].dt.year>=2022]
    .groupby('month')
    .agg({'sum_counts':'mean'})
    .reset_index()
)
count_by_month_since_2022 = count_by_month_since_2022.rename(columns = {"sum_counts": "value"})
count_by_month_since_2022.head(2)
```

```{python}
from plotnine import *

# Question 3: plotnine generic function
def figure3(df):
    figure3 = (
        ggplot(df) +
        geom_bar(aes(x = "month", y = "value"), fill = "#ffcd00", stat = "identity") +
        labs(x = "Date et heure de comptage", y = "Moyenne mensuelle du comptage par heure\nsur la période sélectionnée",
        title = "Moyenne mensuelle des comptages vélos") +
        theme_minimal() +
        theme(
            axis_text_x = element_text(angle = 45, hjust = 1),
            axis_title_y = element_text(color = "#ffcd00", face = "bold"),
            plot_title = element_text(hjust = 0.5)
            )
        )
    return figure3
```


::: {.content-visible when-profile="fr"}
La figure avec les données depuis début 2022 aura cet aspect si elle a été construite avec `plotnine` :
:::

::: {.content-visible when-profile="en"}
The figure with data from early 2022 will look like this if it was created with `plotnine`:
:::

```{python}
figure3(count_by_month_since_2022)
```

::: {.content-visible when-profile="fr"}
Avec `seaborn`, elle ressemblera plutôt à ceci :
:::

::: {.content-visible when-profile="en"}
With `seaborn`, it will look more like this:
:::

```{python}
# Question 3: version seaborn
sns.set_style("whitegrid")
count_by_month_since_2022_seaborn = (
    df.loc[df['date'].dt.year>=2022]
    .groupby('month')
    .agg({'sum_counts':'mean'})
    .reset_index()
)
g = sns.catplot(
    x='month', y='sum_counts',
    data=count_by_month_since_2022_seaborn, kind = "bar",
    height = 5, aspect = 4, color = "yellow"
)
g.set_axis_labels('Date et heure de comptage', 'Moyenne mensuelle du comptage par heure sur la période sélectionnée')
plt.title('Moyenne mensuelle des comptages vélos')
```


::: {.content-visible when-profile="fr"}
Si vous préférez représenter cela sous forme de _lollipop_[^notecouleur]:
:::

::: {.content-visible when-profile="en"}
If you prefer to represent this as a _lollipop_[^notecolor]:
:::


```{python}
(
    ggplot(count_by_month_since_2022, aes(x = "month", y = "value")) +
    geom_segment(aes(xend = "month", yend = 0)) +
    geom_point( color="#ffcd00", size=4) +
    labs(
        x = "Date et heure de comptage", y = "Moyenne mensuelle du comptage par heure\nsur la période sélectionnée",
        title = "Moyenne mensuelle des comptages vélos"
    ) +
    theme_minimal() +
    theme(
        axis_text_x = element_text(angle = 45, hjust = 1),
        plot_title = element_text(hjust = 0.5)
    )
)
```

::: {.content-visible when-profile="fr"}
[^notecouleur]: J'ai retiré la couleur sur l'axe des ordonnées qui, je trouve, apporte peu à la figure voire dégrade la compréhension du message.
:::

::: {.content-visible when-profile="en"}
[^notecouleur]: I removed the color on the y-axis as I find it adds little to the figure and may even degrade message clarity
:::


