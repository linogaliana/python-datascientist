name: Build and deploy to Netlify

on: [pull_request]


# example borrowed from https://pythonpackaging.info/06-Continuous-Integration.html
# and https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python
# and https://autobencoder.com/2020-08-24-conda-actions/

jobs:
  blogdown:
    name: Render-Blog
    runs-on: ubuntu-latest
#    container: linogaliana/python-datascientist:latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Install rmarkdown
        run: Rscript -e 'install.packages(c("rmarkdown","blogdown"))'
      - name: install hugo
        run: Rscript -e 'blogdown::install_hugo()'
      - name: Install Python
        run: |
          Rscript -e "install.packages(c('remotes', 'reticulate'))"
#          Rscript -e "remotes::install_github('rstudio/reticulate')"
#          Rscript -e "reticulate::install_miniconda()"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.7
          auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Render blog
        run: Rscript -e 'blogdown::build_site()'
      - name: Install npm
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        uses: actions/setup-node@v2          
        with:
          node-version: '12'        
      - name: Deploy to Netlify
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        # NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm init -y
          npm install --unsafe-perm=true netlify-cli -g
          netlify init
          netlify deploy --alias=${CI_COMMIT_REF_NAME} --dir="public" --message "Deploy from ${GITHUB_REF}"
      - uses: actions/upload-artifact@v1
        with:
          name: public
          path: public/

