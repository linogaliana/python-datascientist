---
toc: false
sidebar: false
title-block-style: none
css: styles/homepage.css
listing:
    id: sample-listings
    contents:
        - "content/getting-started/*.qmd"
        - "content/manipulation/*.qmd"
        - "!content/manipulation/03_geopandas_tutorial.qmd"
        - "content/visualisation/*.qmd"
        - "content/modelisation/*.qmd"
        - "content/NLP/*.qmd"
        - "content/git/*.qmd"
    type: grid
    sort: "number"
    categories: true
    #fields: [image, title, github, gitlab]
    #template: cards.ejs
---


::: {#hero-banner .column-screen}

:::: {.grid .column-page}

::::: {.headline .g-col-lg-6 .g-col-12 .g-col-md-12}

:::::: h1
Python pour la _data science_ {{< fa brands python >}}
::::::

:::::: h2
[Lino Galiana](https://github.com/linogaliana/)
::::::

```{=html}
<div style="text-align: right;">
<a class="github-button" href="https://github.com/linogaliana/python-datascientist" data-icon="octicon-star" data-size="large" data-show-count="true" aria-label="Star this website on Github">Star this website on Github</a><script async defer src="https://buttons.github.io/buttons.js"></script>
</div>
```


Site web du cours [*Python pour la data science*](https://www.ensae.fr/courses/1425-python-pour-le-data-scientist)
<a href="https://github.com/linogaliana/python-datascientist" class="github"><i class="fab fa-python"></i></a>, une introduction √† `Python` pour
la deuxi√®me ann√©e du cursus d'ing√©nieur de l'[`ENSAE`](https://www.ensae.fr/) (Master 1). 

<br>

L'ensemble du contenu de ce groupe est librement disponible ici
ou sur [`Github`](https://github.com/linogaliana/python-datascientist)
<a href="https://github.com/linogaliana/python-datascientist" class="github"><i class="fab fa-github"></i></a> et peut √™tre test√©
sous forme de _notebooks_ `Jupyter`.

<br>

<details>
<summary>

Exemple avec l'introduction √† `Pandas`

</summary>
```{ojs}
//| echo: false
html`${printBadges({fpath: "content/manipulation/02_pandas_intro.qmd"})}`
```

</details>

<details>
<summary>

Au programme:

</summary>

Globalement, ce cours propose un contenu tr√®s complet pouvant autant 
satisfaire des d√©butants en 
_data science_ que des personnes √† la recherche de contenu plus avanc√© :
<br>

1. __Manipulation de donn√©es__ : manipulation de donn√©es standards (`Pandas`), donn√©es g√©ographiques (`Geopandas`), r√©cup√©ration de donn√©es (webscraping, API)...
1. __Visualisation de donn√©es__ : visualisations classiques (`Matplotlib`, `Seaborn`), cartographie, visualisations r√©actives (`Plotly`, `Folium`)
1. __Mod√©lisation__ : _machine learning_ (`Scikit`), √©conom√©trie
1. __Traitement de donn√©es textuelles__ (NLP): d√©couverte de la tokenisation avec `NLTK` et `SpaCy`, mod√©lisation...
1. **Introduction √† la _data science_ moderne** : _cloud computing_, `ElasticSearch`, int√©gration continue...

<br>

L'ensemble du contenu de ce site s'appuie sur des donn√©es
ouvertes, qu'il s'agisse de donn√©es fran√ßaises (principalement
issues de la plateforme
centralisatrice [`data.gouv`](https://www.data.gouv.fr) ou du site
_web_ de l'[Insee](https://www.insee.fr)) ou de donn√©es
am√©ricaines. Le programme est pr√©sent√© de mani√®re lin√©aire dans la partie sup√©rieure de cette page (üëÜÔ∏è) ou de mani√®re d√©sordonn√©e ci-dessous (üëáÔ∏è).

Un bon compl√©ment du contenu du site web est le cours que nous donnons avec Romain Avouac en derni√®re ann√©e de l'ENSAE plus tourn√© autour de la mise en production de projets _data science_ : [https://ensae-reproductibilite.github.io/website/](https://ensae-reproductibilite.github.io/website/)


</details>


:::::

::::: {.g-col-lg-6 .g-col-12 .g-col-md-12}
![](https://minio.lab.sspcloud.fr/lgaliana/generative-art/pythonds/kiddos.png)
:::::

::::

:::

<br>

## Th√®mes en vrac {.unnumbered}

Pour d√©couvrir `Python` {{< fa brands python >}} de mani√®re d√©sordonn√©e. La version ordonn√©e est dans la partie sup√©rieure de cette page (üëÜÔ∏è).


::: {#sample-listings}
:::


```{python}
#| include: false
#| eval: false
import os
import glob
import yaml

list_files = glob.glob("./content/**/*.qmd", recursive=True)
posts = [l for l in list_files if l.endswith('.qmd') ]

def extract_slug_from_markdown(file_path):
    with open(file_path, 'r') as file:
        content = file.read()
        front_matter = yaml.safe_load(content.split('---', 2)[1])
        
        if isinstance(front_matter, dict) and 'slug' in front_matter:
            slug = front_matter['slug']
            return slug
        
        return None


# Extract the slugs
slugs = {post: extract_slug_from_markdown(post) for post in posts if extract_slug_from_markdown(post) is not None}

# Lines to insert in a Netlify _redirect file
redirects = [f"/{slug} /posts/{post}" for slug, post in zip(slugs, posts)]

# Write the _redirect file
with open("_site/_redirects", "w") as f:
    f.write("\n".join(redirects))

```






```{ojs}
//| echo: false
function reminderBadges({
    sourceFile = "content/01_toto.Rmd",
    type = ['md', 'html'],
    split = null,
    onyxiaOnly = false,
    sspCloudService = "python",
    GPU = false,
    correction = false
} = {}) {
    if (Array.isArray(type)) {
        type = type[0];
    }

    let notebook = sourceFile.replace(/(.Rmd|.qmd)/, ".ipynb");
    if (correction) {
        notebook = notebook.replace(/content/, "corrections");
    } else {
        notebook = notebook.replace(/content/, "notebooks");
    }

    const githubRepoNotebooksSimplified = "github/linogaliana/python-datascientist-notebooks";
    const githubAlias = githubRepoNotebooksSimplified.replace("github", "github.com");
    const githubRepoNotebooks = `https://${githubAlias}`;

    let githubLink ;

    if (notebook === "") {
        githubLink = githubRepoNotebooks;
    } else {
        githubLink = `${githubRepoNotebooks}/blob/main`;
    }

    const notebookRelPath = `/${notebook}`;
    const [section, chapter] = notebook.split("/").slice(-2);


    githubLink = `<a href="${githubLink}${notebookRelPath}" class="github"><i class="fab fa-github"></i></a>`;

    const sectionLatest = section.split("/").slice(-1)[0];
    const chapterNoExtension = chapter.replace(".ipynb", "");
    const onyxiaInitArgs = [sectionLatest, chapterNoExtension];

    if (correction) {
        onyxiaInitArgs.push("correction");
    }

    const gpuSuffix = GPU ? "-gpu" : "";

    const sspcloudJupyterLinkLauncher = `https://datalab.sspcloud.fr/launcher/ide/jupyter-${sspCloudService}${gpuSuffix}?autoLaunch=true&onyxia.friendlyName=%C2%AB${chapterNoExtension}%C2%BB&init.personalInit=%C2%ABhttps%3A%2F%2Fraw.githubusercontent.com%2Flinogaliana%2Fpython-datascientist%2Fmaster%2Fsspcloud%2Finit-jupyter.sh%C2%BB&init.personalInitArgs=%C2%AB${onyxiaInitArgs.join('%20')}%C2%BB&security.allowlist.enabled=false`;

    let sspcloudJupyterLink;
    if (type === "md") {
        sspcloudJupyterLink = `[![Onyxia](https://img.shields.io/badge/SSP%20Cloud-Tester_avec_Jupyter-orange?logo=Jupyter&logoColor=orange)](${sspcloudJupyterLinkLauncher})`;
    } else {
        sspcloudJupyterLink = `<a href="${sspcloudJupyterLinkLauncher}" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/SSP%20Cloud-Tester_avec_Jupyter-orange?logo=Jupyter&logoColor=orange" alt="Onyxia"></a>`;
    }

    if (split === 4) {
        sspcloudJupyterLink += '<br>';
    }

    const sspcloudVscodeLinkLauncher = `https://datalab.sspcloud.fr/launcher/ide/vscode-${sspCloudService}${gpuSuffix}?autoLaunch=true&onyxia.friendlyName=%C2%AB${chapterNoExtension}%C2%BB&init.personalInit=%C2%ABhttps%3A%2F%2Fraw.githubusercontent.com%2Flinogaliana%2Fpython-datascientist%2Fmaster%2Fsspcloud%2Finit-vscode.sh%C2%BB&init.personalInitArgs=%C2%AB${onyxiaInitArgs.join('%20')}%C2%BB&security.allowlist.enabled=false`;

    let sspcloudVscodeLink;
    if (type === "md") {
        sspcloudVscodeLink = `[![Onyxia](https://img.shields.io/badge/SSP%20Cloud-Tester_avec_VSCode-blue?logo=visualstudiocode&logoColor=blue)](${sspcloudVscodeLinkLauncher})`;
    } else {
        sspcloudVscodeLink = `<a href="${sspcloudVscodeLinkLauncher}" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/SSP%20Cloud-Tester_avec_VSCode-blue?logo=visualstudiocode&logoColor=blue" alt="Onyxia"></a>`;
    }

    if (split === 5) {
        sspcloudVscodeLink += '<br>';
    }

    let colabLink;
    if (type === "md") {
        colabLink = `[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/${githubRepoNotebooksSimplified}/blob/main${notebookRelPath})`;
    } else {
        colabLink = `<a href="https://colab.research.google.com/${githubRepoNotebooksSimplified}/blob/main${notebookRelPath}" target="_blank" rel="noopener"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"></a>`;
    }

    if (split === 7) {
        colabLink += '<br>';
    }

    let vscodeLink;
    if (type === "md") {
        vscodeLink = `[![githubdev](https://img.shields.io/static/v1?logo=visualstudiocode&label=&message=Open%20in%20Visual Studio Code&labelColor=2c2c32&color=007acc&logoColor=007acc)](https://github.dev/linogaliana/python-datascientist-notebooks${notebookRelPath})`;
    } else {
        vscodeLink = `<a href="https://github.dev/linogaliana/python-datascientist-notebooks${notebookRelPath}" target="_blank" rel="noopener"><img src="https://img.shields.io/static/v1?logo=visualstudiocode&label=&message=Open%20in%20Visual%20Studio%20Code&labelColor=2c2c32&color=007acc&logoColor=007acc" alt="githubdev"></a></p>`;
    }

    const badges = [
        githubLink,
        sspcloudVscodeLink,
        sspcloudJupyterLink
    ];

    if (!onyxiaOnly) {
        badges.push(colabLink);
    }

    let result = badges.join("\n");

    if (type === "html") {
        result = `<p class="badges">${result}</p>`;
    }

    if (onyxiaOnly) {
        result = `${sspcloudJupyterLink}${sspcloudVscodeLink}`;
    }

    return result;
}


function printBadges({
    fpath,
    onyxiaOnly = false,
    split = 5,
    type = "html",
    sspCloudService = "python",
    GPU = false,
    correction = false
} = {}) {
    const badges = reminderBadges({
        sourceFile: fpath,
        type: type,
        split: split,
        onyxiaOnly: onyxiaOnly,
        sspCloudService: sspCloudService,
        GPU: GPU,
        correction: correction
    });

    return badges
}

// Example usage:
// printBadges({ fpath: "content/getting-started/05_rappels_types.qmd", onyxiaOnly: false, split: 5, type: "html", sspCloudService: "python", GPU: false, correction: false });
```